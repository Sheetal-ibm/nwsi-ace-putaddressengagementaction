{
  "swagger": "2.0",
  "info": {
    "title": "Involved Party Management APIs",
    "description": "A group of services that relate to the creation and management of an involved party's details",
    "version": "v3.3"
  },
  "basePath": "/involved-party-management/v3",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json; charset=utf-8"
  ],
  "produces": [
    "application/json; charset=utf-8"
  ],
  "parameters": {
    "Additional-Info": {
      "in": "header",
      "name": "X-Additional-Info",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
        "minLength": 3,
        "maxLength": 121
      },
      "required": false,
      "collectionFormat": "csv",
      "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
    },
    "Channel": {
      "in": "header",
      "name": "X-Channel",
      "type": "string",
      "minLength": 2,
      "maxLength": 25,
      "required": true,
      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
      "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
    },
    "Channel-Alternate-Id": {
      "in": "header",
      "name": "X-Channel-Alternate-Id",
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
        "minLength": 3,
        "maxLength": 121
      },
      "required": false,
      "collectionFormat": "csv",
      "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
    },
    "Virtual-Environment": {
      "in": "header",
      "name": "X-Virtual-Environment",
      "type": "string",
      "minLength": 1,
      "maxLength": 20,
      "required": true,
      "pattern": "^[A-Z0-9,\\.\\-]*$",
      "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
    },
    "Schema-Version": {
      "in": "header",
      "name": "X-Schema-Version",
      "type": "string",
      "enum": [
        3,
        3.1,
        3.2,
        3.3
      ],
      "required": true,
      "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
    },
    "Journey-Id": {
      "in": "header",
      "name": "X-Journey-Id",
      "type": "string",
      "minLength": 36,
      "maxLength": 36,
      "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
      "required": false,
      "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
    },
    "Source-System-Id": {
      "in": "header",
      "name": "X-Source-System-Id",
      "type": "string",
      "minLength": 1,
      "maxLength": 60,
      "required": true,
      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
      "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
    },
    "Create-Date-Time": {
      "in": "header",
      "name": "X-Create-Date-Time",
      "type": "string",
      "format": "date-time",
      "required": true,
      "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
    },
    "IP-Address": {
      "in": "header",
      "name": "X-IP-Address",
      "type": "string",
      "minLength": 7,
      "maxLength": 39,
      "required": false,
      "pattern": "^[a-fA-F0-9:\\.]*$",
      "description": "The IPv4/IPv6 address of the caller."
    },
    "Validation-Token": {
      "in": "header",
      "name": "X-Validation-Token",
      "type": "string",
      "required": true,
      "maxLength": 1024,
      "description": "Bespoke JWT validation token that allows calling the service. It also contains attributes to be validated against some parameters passed in the body to avoid tampering\n"
    },
    "involvedPartyId": {
      "in": "path",
      "name": "involvedPartyId",
      "type": "string",
      "required": true,
      "minLength": 1,
      "maxLength": 10,
      "pattern": "^\\d{1,10}$",
      "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
    },
    "moreProcessing": {
      "in": "query",
      "name": "moreProcessing",
      "required": false,
      "type": "string",
      "minLength": 0,
      "maxLength": 27,
      "pattern": "^[\\sa-zA-Z\\d,_!/\"$%:;<=?@Â£\\.\\-\\*\\\\\\^\\{\\}\\(\\)\\+\\[\\]\\x23\\x27\\xD9\\xE3&]*$",
      "description": "This will be populated if there are more records to be updated for\nname details in continuation with previous call for a particular\nInvolved Party ID.\n"
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      },
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "401": {
      "description": "Unauthorized"
    },
    "403": {
      "description": "Forbidden"
    },
    "404": {
      "description": "Not Found",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      },
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "405": {
      "description": "Method Not Allowed"
    },
    "406": {
      "description": "Not Acceptable"
    },
    "429": {
      "description": "Too Many Requests"
    },
    "500": {
      "description": "Internal Server Error",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      },
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "501": {
      "description": "Not Implemented",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "502": {
      "description": "Bad Gateway",
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "503": {
      "description": "Service Unavailable",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      },
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "504": {
      "description": "Gateway Timeout",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      },
      "schema": {
        "$ref": "#/definitions/Errors"
      }
    },
    "ResponsesHeaders": {
      "description": "The response header parameters are common across all NEM resources.\n",
      "headers": {
        "X-Journey-Id": {
          "type": "string",
          "minLength": 36,
          "maxLength": 36,
          "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
          "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
        },
        "X-Create-Date-Time": {
          "type": "string",
          "format": "date-time",
          "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
        }
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "securityDefinitions": {
    "JWT": {
      "name": "Authorization",
      "type": "apiKey",
      "in": "header"
    }
  },
  "definitions": {
    "ErrorResponseSchema": {
      "type": "object",
      "properties": {
        "TransactionStatus": {
          "title": "transactionStatus",
          "type": "object",
          "properties": {
            "Status": {
              "description": "Overall status of the response.",
              "type": "string",
              "enum": [
                "INVALIDDATA",
                "PARTIALSUCCESS",
                "REJECTED",
                "SUCCESS",
                "TRANSPORTFAILURE",
                "PROTOCOLFAILURE",
                "NOTFOUND"
              ]
            },
            "Result": {
              "type": "object",
              "properties": {
                "Behaviour": {
                  "description": "Instruction to the BPM app support team to advise next steps for this Process Instance. This will not always be returned.",
                  "type": "string",
                  "enum": [
                    "ABORT",
                    "CANCOMPENSATE",
                    "CANOVERRIDE",
                    "CANRETRY"
                  ]
                },
                "OverallSecurityLevel": {
                  "description": "Maximum severity level of the stack.",
                  "type": "string",
                  "enum": [
                    "Error",
                    "Critical",
                    "Warning",
                    "Info"
                  ]
                }
              }
            },
            "Stack": {
              "type": "array",
              "items": {
                "properties": {
                  "Code": {
                    "description": "Used by service consumers to define the error handling code. Each interface specification specifies which errors this service can return.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 13
                  },
                  "Description": {
                    "description": "Description associated with code, providing a summary of code meaning.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 1000
                  },
                  "Source": {
                    "description": "Source component for this error - e.g. Service Operation or Process.",
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 256
                  },
                  "Severity": {
                    "description": "Severity level. A critical error requires further data remediation - e.g. in the Systems of Record. ",
                    "type": "string",
                    "enum": [
                      "Error",
                      "Critical",
                      "Warning",
                      "Info"
                    ]
                  },
                  "Category": {
                    "description": "Further categorisation. OUTCOMEUNKNOWN/PARTIALFAILURE/TIMEOUT may require data integrity investigation.",
                    "type": "string",
                    "enum": [
                      "COMPLETEFAILURE",
                      "INPUTERROR",
                      "OUTCOMEUNKNOWN",
                      "PARTIALFAILURE",
                      "TIMEOUT"
                    ]
                  },
                  "Context": {
                    "description": "Original stack element, typically the error response from a System of Record.",
                    "type": "string"
                  }
                },
                "required": [
                  "Code"
                ]
              }
            }
          },
          "required": [
            "Status"
          ]
        }
      },
      "additionalProperties": false
    },
    "Errors": {
      "type": "object",
      "required": [
        "errors"
      ],
      "properties": {
        "errors": {
          "type": "array",
          "description": "This block wraps either field level error or the error returned by the provider service and returned as a custom error. In case of multiple service invocation failure, all error will be wrapped and return for consumer to make decision and compose more meaningful message as desired.\n",
          "items": {
            "$ref": "#/definitions/Error"
          },
          "default": []
        }
      },
      "example": {
        "errors": [
          {
            "code": "NEM.ESB.IPM.400.100",
            "message": "The Schema Rules Validation Failed..",
            "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
          },
          {
            "code": "NEM.ESB.IPM.400.101",
            "message": "A Required Field is Missing.",
            "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597025"
          }
        ]
      }
    },
    "Error": {
      "type": "object",
      "description": "Error code and message will be used to communicate failure to consumer. This block provides the ability to create internal error code and message communicating the causes of the error. Validation errors for GET, PUT, PATCH and POST requests will need a field breakdown. This is best modelled by using an error code for validation failures and providing the detailed errors message in error message field.\n",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "A custom error code returned by the API for the consumer interested in fine-grained error handling. In the case where HTTP response code is too generic to provide specific treatment by the consumer, custom code can be used to handle specific error condition based on the provider services error condition. For example UI might want to show list of field error by name. Each interface specification specifies which errors this API can return."
        },
        "message": {
          "type": "string",
          "maxLength": 2048,
          "description": "It provides information application-specific errors returned by provider service or description of class of error returned by the API for example validation error."
        },
        "logErrorId": {
          "type": "string",
          "format": "uuid",
          "description": "An unique reference for every error being logged."
        }
      },
      "example": {
        "code": "NEM.ESB.IPM.400.101",
        "message": "A Required Field is Missing",
        "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
      }
    }
  },
  "paths": {
    "/involved-parties/{involvedPartyId}": {
      "put": {
        "summary": "Updates an Involved Party Details",
        "description": "This service takes in data related to an Individual and updates data related to them",
        "operationId": "UpdateInvolvedPartyDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          },
          {
            "name": "updateInvolvedPartyDetails",
            "in": "body",
            "description": "Updates the details of an involved party",
            "required": true,
            "schema": {
              "title": "InvolvedParty PUT schema",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "involvedPartySoftLock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "involvedPartyDetails": {
                  "type": "object",
                  "description": "Personal details of involved party",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "description": "Details of Individual",
                      "properties": {
                        "prefixTitle": {
                          "type": "string",
                          "title": "Prefix title",
                          "maxLength": 4,
                          "description": "This is the customer title. Values dervied from TMSII View No. 247",
                          "pattern": "^[0-9]{1,4}$",
                          "example": "01"
                        },
                        "firstName": {
                          "type": "string",
                          "title": "First Name",
                          "maxLength": 15,
                          "description": "This is the customer forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Charles"
                        },
                        "middleName1": {
                          "type": "string",
                          "title": "Middle Name1",
                          "maxLength": 15,
                          "description": "This is the customer 2nd forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Maximillion"
                        },
                        "middleName2": {
                          "type": "string",
                          "title": "Middle Name2",
                          "maxLength": 15,
                          "description": "This is the customer 3rd forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Benjamin"
                        },
                        "lastName": {
                          "type": "string",
                          "title": "Last Name",
                          "maxLength": 30,
                          "description": "This is the customer surname",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,30}$",
                          "example": "Smith"
                        },
                        "initials": {
                          "type": "string",
                          "title": "Intials",
                          "maxLength": 6,
                          "description": "This is the customer name initials",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,6}$",
                          "example": "C.M.B.S."
                        },
                        "suffixTitle": {
                          "type": "string",
                          "title": "Suffix Title",
                          "maxLength": 4,
                          "description": "This is the customers honorific, i.e. BSc. Values dervied from TMSII table No. 48",
                          "pattern": "^[0-9]{1,4}$",
                          "example": "01"
                        },
                        "preferredName": {
                          "type": "string",
                          "title": "Preferred Name",
                          "maxLength": 15,
                          "description": "This is the customers name which they prefer to be addressed by",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Benjamin"
                        },
                        "birthDate": {
                          "type": "string",
                          "title": "Birth Date",
                          "description": "This is a customers date of birth: Uses the UTC ISO 8601 Date Date format. For example 2017-01-01",
                          "format": "date",
                          "example": "2017-01-01T00:00:00.000Z"
                        },
                        "maritalStatus": {
                          "type": "string",
                          "title": "Marital Status",
                          "maxLength": 4,
                          "description": "Marital status of customer. Values from TMSII View No. 146 - InvvdPtyIndivMaritalStatus",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "numberOfDependents": {
                          "type": "string",
                          "title": "Number of Dependents",
                          "maxLength": 2,
                          "description": "Count of dependents that a customer has",
                          "pattern": "^[0-9]{1,2}$",
                          "example": 1
                        },
                        "gender": {
                          "type": "string",
                          "title": "Gender",
                          "maxLength": 4,
                          "description": "Gender of Customer. Values from TMSII View No. 140 - Invvd Pty Indiv Gender",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "nationalInsuranceNumber": {
                          "type": "string",
                          "title": "NI Number",
                          "maxLength": 9,
                          "description": "National insurance number of customer",
                          "pattern": "^[A-Z]{2}\\d{6}[A-D]{1}$",
                          "example": "QQ123456C"
                        },
                        "accessibilityNeeds": {
                          "type": "string",
                          "title": "Accessability Needs",
                          "maxLength": 4,
                          "description": "Particular Needs of a customer. Values from TMS Table No. 484 - Particular Needs",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "citizenshipCountryCode": {
                          "type": "array",
                          "title": "Nationality",
                          "description": "National registration of involved party. Values from TMSII View No. 350 - Invvd Pty Indiv Nationality 1",
                          "items": {
                            "type": "string",
                            "maxLength": 4,
                            "pattern": "^[0-9]{0,4}$",
                            "example": 1
                          }
                        },
                        "deceasedStatus": {
                          "type": "string",
                          "title": "Deceased Status",
                          "maxLength": 4,
                          "description": "Death indicator of customer. Values from TMSII Table 46 - Invvd Pty Indiv Death Indicator",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "deceasedDate": {
                          "type": "string",
                          "title": "Deceased Date",
                          "description": "This is a customer date of death: Uses the UTC ISO 8601 Date Date format. For example 2017-01-01",
                          "format": "date",
                          "example": "2017-01-01T00:00:00.000Z"
                        },
                        "countryOfBirth": {
                          "type": "string",
                          "title": "Country Of Birth",
                          "maxLength": 2,
                          "description": "Country of birth of involved party.  Values from CIS table AA020.",
                          "pattern": "^[A-Z0-9]{2}$",
                          "example": "GB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "organisation": {
                      "type": "object",
                      "title": "Organisation",
                      "description": "Details of organisation",
                      "properties": {
                        "establishedDate": {
                          "type": "string",
                          "title": "Established Date",
                          "description": "Establishment date of organisation",
                          "format": "date",
                          "example": "2019-01-01T00:00:00.000Z"
                        },
                        "organisationName": {
                          "type": "string",
                          "title": "Organisation Name",
                          "description": "Name of organisation",
                          "maxLength": 55,
                          "pattern": "^[\\sa-zA-Z0-9\\'-*&!\"#$%()\\/+,-.:;<=>?@^_{}|]{0,55}$",
                          "example": "Nationwide Building Society"
                        }
                      }
                    },
                    "marketingPreferences": {
                      "type": "object",
                      "title": "Marketing Preferences",
                      "description": "GDPR flags for marketing consent",
                      "properties": {
                        "post": {
                          "type": "string",
                          "title": "Post",
                          "description": "Postal preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Mail",
                            "Market By Mail"
                          ],
                          "example": "No Market By Mail"
                        },
                        "telephone": {
                          "type": "string",
                          "title": "Telephone",
                          "description": "Telephone preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Telephone",
                            "Market By Telephone"
                          ],
                          "example": "Market By Telephone"
                        },
                        "email": {
                          "type": "string",
                          "title": "Email",
                          "description": "Email preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Email",
                            "Market By Email"
                          ],
                          "example": "Market By Email"
                        },
                        "online": {
                          "type": "string",
                          "title": "Online Indicator",
                          "description": "Online preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt online",
                            "Prompt online"
                          ],
                          "example": "Prompt online"
                        },
                        "faceToFace": {
                          "type": "string",
                          "title": "Face to Face Indicator",
                          "description": "Face to Face preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt Face To Face",
                            "Prompt Face To Face"
                          ],
                          "example": "Not Prompt Face To Face"
                        },
                        "viaPhone": {
                          "type": "string",
                          "title": "via Phone Indicator",
                          "description": "via Phone preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt By Phone",
                            "Prompt By Phone"
                          ],
                          "example": "Prompt By Phone"
                        },
                        "smsService": {
                          "type": "string",
                          "title": "SMS Service",
                          "description": "SMS Service preference of customer",
                          "enum": [
                            "No Preference",
                            "No Service By SMS Service",
                            "Service By SMS Service"
                          ],
                          "example": "No Service By SMS Service"
                        },
                        "smsMarketing": {
                          "type": "string",
                          "title": "SMS Marketing",
                          "description": "SMS Marketing preference of customer",
                          "enum": [
                            "No Preference",
                            "No Service By SMS Marketing",
                            "Service By SMS Marketing"
                          ],
                          "example": "No Service By SMS Marketing"
                        }
                      },
                      "additionalProperties": false
                    },
                    "membershipStatus": {
                      "type": "object",
                      "title": "MembershipStatus",
                      "description": "Membership status of Involved Party",
                      "properties": {
                        "membershipStatusCode": {
                          "type": "string",
                          "title": "Membership Status Code",
                          "description": "Invovled Party membership status value. Please refre TMS Table No. 644 â IndividualMembershipCode\n",
                          "maxLength": 1,
                          "pattern": "^[\\sa-zA-Z0-9]{1}$",
                          "example": "F"
                        },
                        "membershipVoluntaryIndicator": {
                          "type": "boolean",
                          "title": "Membership Voluntary Indicator",
                          "description": "Voluntary Indicator for membership . True â Voluntary Indicator has been set, False -  Otherwise\n",
                          "example": true
                        },
                        "membershipOverrideIndicator": {
                          "type": "string",
                          "title": "Membership Override Indicator",
                          "description": "Override Indicator for membership.Enumerations defined as All products (including Portman), and NBS products only\n",
                          "enum": [
                            "All Products Including Portman",
                            "NBS Products only"
                          ],
                          "example": "NBS Products only"
                        }
                      },
                      "additionalProperties": false
                    },
                    "doNotMergeIndicator": {
                      "type": "string",
                      "title": "Merge Indicator",
                      "description": "Indicates if record should be merged with similar record or not",
                      "enum": [
                        "Do Not Merge",
                        "Merge"
                      ],
                      "example": "Do Not Merge"
                    },
                    "tssRegisteredInd": {
                      "type": "string",
                      "title": "TSS Registered Indicator",
                      "description": "Telephone Banking Registration Status. TSS (Telephone Self Service)",
                      "enum": [
                        "Registered For TSS",
                        "De-registered From TSS",
                        "Never Registered For TSS",
                        "Blocked From TSS"
                      ],
                      "example": "Registered For TSS"
                    },
                    "iBRegStatus": {
                      "type": "string",
                      "title": "IB Registration Status",
                      "description": "Internet Bank Registration Status",
                      "enum": [
                        "Registered For IB",
                        "De-registered From IB",
                        "Never Registered For IB",
                        "Blocked From IB"
                      ],
                      "example": "Never Registered For IB"
                    },
                    "idCheckStatusCode": {
                      "type": "string",
                      "title": "Identification Check Status Code",
                      "description": "Identification Check Status Code. Values from TMSII Table No. 508 - IdentificationCheckStatusCode",
                      "maxLength": 4,
                      "pattern": "^[0-9]{1,4}$",
                      "example": "00001"
                    },
                    "contactPreferences": {
                      "description": "Holds the list of contact preferences of an involved party (individual or organisation).\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accountsForAddressChange": {
                            "description": "The list of accounts whose correspondance address will be changed.\nAt a time up to a maximum of 50 acounts can be processed.\nThe consumer is expected to invoke this service multiple times when more than 50 accounts need to be processed sending upto a maximum of 50 accounts per invocation.\nNote - This input is specific to Exception Change of Address.\n",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "accountSoftLock": {
                                  "type": "string",
                                  "title": "Account SoftLock",
                                  "maxLength": 12,
                                  "description": "The Agreement Blob as defined by CIS.                      \n"
                                }
                              }
                            }
                          },
                          "moreProcessing": {
                            "type": "string",
                            "title": "More Processing",
                            "maxLength": 14,
                            "description": "This represents if there are further agreements for which the address needs to change. This is Mandatory input to next call if output by previous call to SC03(Standard Change of Address) - indicates that not all accounts have been moved\n",
                            "pattern": "^[\\sa-zA-Z0-9]{1,14}$",
                            "example": "aaaabbbbbbbbbb"
                          },
                          "contactPointSoftLock": {
                            "type": "string",
                            "title": "CP SoftLock",
                            "description": "This is reference to contact point within CIS. It is combination of contact point reference number and update level. Populate this if user has  searched/selected existing contact point for the customer.  This field must always be sourced from a previous CIS response Used only to set existing address as the correspondence address",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                            "maxLength": 12,
                            "example": "092349393424"
                          },
                          "contactPointEndDate": {
                            "type": "string",
                            "title": "CP End Date",
                            "description": "contact Point Role end Date. After this date contact point will not be effective.\n",
                            "format": "date",
                            "example": "CCYY-MM-DD"
                          },
                          "contactPointStartDate": {
                            "type": "string",
                            "title": "CP Start Date",
                            "description": "contact Point Role Start Date on which contact point will be effective\n",
                            "format": "date",
                            "example": "CCYY-MM-DD"
                          },
                          "contactPointOccupancyStatusCode": {
                            "type": "string",
                            "title": "Role Occupancy Status Code",
                            "maxLength": 4,
                            "description": "Occupancy Status of the contact point.  e.g. - Owner Occupier, Private Tenant etc. Please refer to TMS Table 194 forvalues\n",
                            "pattern": "^[0-9]{1,4}$",
                            "example": "0001"
                          },
                          "contactPointUsage": {
                            "type": "string",
                            "maxLength": 4,
                            "description": "Usage of contact point a.k.a Communication Point Role Type. e.g Correspondence Address, Residential Address etc. Please refer to TMS view 250 for code/values.This field must be presented for all Communication Points updates. \n",
                            "pattern": "^[0-9]{1,4}$",
                            "example": "0001"
                          },
                          "contactPointTelephoneNumber": {
                            "type": "object",
                            "title": "Telephone Number",
                            "description": "Details related to a Fixedline or Mobile number. For GET all fields are available, however for PUT/POST a consumer can only populate localNumber, areaCode and extensionNumber,countryPhoneCode If exists. For UK Phone numbers, the Phone number need to be passed into two part assigning into areaCode and localNumber.\n",
                            "properties": {
                              "areaCode": {
                                "type": "string",
                                "maxLength": 10,
                                "readOnly": true,
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\+]*$",
                                "example": "0208"
                              },
                              "countryPhoneCode": {
                                "type": "string",
                                "maxLength": 2,
                                "pattern": "^[\\sa-zA-Z]{1,2}$",
                                "example": "GB"
                              },
                              "localNumber": {
                                "type": "string",
                                "maxLength": 20,
                                "pattern": "^[0-9]{1,20}$",
                                "example": "9975521"
                              },
                              "extensionNumber": {
                                "type": "string",
                                "maxLength": 6,
                                "readOnly": true,
                                "pattern": "^[0-9]{1,6}$",
                                "example": "120048"
                              }
                            },
                            "additionalProperties": false
                          },
                          "contactPointEmailAddress": {
                            "type": "string",
                            "title": "Email",
                            "maxLength": 100,
                            "description": "Email address aka Electronic Address\n",
                            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                            "example": "Perter@address.co.uk"
                          },
                          "standaloneAddressIndicator": {
                            "type": "boolean",
                            "title": "Standalone Address Indicator",
                            "description": "Standalone or hanging address ( The postal address of an Involved Party which is NOT associated to any agreements )  True- Standalone address set, False -  Oherwise.This field must be presented for all Communication Points updates. Only applicable to to postal addresses\n",
                            "example": true
                          },
                          "contactPointManualEntryReasonCode": {
                            "type": "string",
                            "title": "CP Manual Entry Reason Code",
                            "maxLength": 4,
                            "description": "Reason for not selecting address from search and entering address manually. Please refer TMSII Table No. 21 - Comcn Pnt Validity Reason for code/ values. Only applicable to postal addresses",
                            "pattern": "^[0-9]{1,4}$",
                            "example": "01"
                          },
                          "contactPointAddressComponent": {
                            "type": "object",
                            "title": "Postal Address",
                            "description": "Contains an address types and address information populated by data available. Consumer should check to see if BFPO is populate to find type of address. If BFPO is given use fields addressLine1 and and below. Else use other fields except in the case of foreign addresses, where consumer would also use addressLine1 to addressLine3 in addition to the country",
                            "properties": {
                              "unitNumber": {
                                "type": "string",
                                "title": "Unit Number",
                                "maxLength": 30,
                                "description": "Sub Building Name",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-]{1,30}$",
                                "example": "23A"
                              },
                              "buildingNumber": {
                                "type": "string",
                                "title": "Building Number",
                                "maxLength": 10,
                                "description": "Number of building",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-]{1,10}$",
                                "example": "34"
                              },
                              "buildingName": {
                                "type": "string",
                                "title": "Building Name",
                                "maxLength": 35,
                                "description": "Name of building",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-\\&]{1,35}$",
                                "example": "The Downs"
                              },
                              "city": {
                                "type": "string",
                                "title": "City",
                                "maxLength": 30,
                                "description": "Postal Town Name",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,30}$",
                                "example": "Swindon"
                              },
                              "thoroughfareName": {
                                "type": "string",
                                "title": "Thoroughfare Name",
                                "maxLength": 35,
                                "description": "Name of Thoroughfare",
                                "example": "Hill Street",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$"
                              },
                              "dependentThoroughfareName": {
                                "type": "string",
                                "title": "Sub Thoroughfare Name",
                                "maxLength": 35,
                                "description": "Sub Thorough fare Name",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "Pyre Close"
                              },
                              "dependentLocality": {
                                "type": "string",
                                "title": "Dependent Locality",
                                "description": "Locality Name",
                                "maxLength": 35,
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "Bethnal Green"
                              },
                              "doubleDependentLocality": {
                                "type": "string",
                                "title": "double Dependent Locality",
                                "maxLength": 35,
                                "description": "Sub Locality Name",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "Whitehall"
                              },
                              "postalCode": {
                                "type": "string",
                                "title": "Postal Code",
                                "maxLength": 8,
                                "description": "Postal code of the address. This includes Inward and Outward post codes, both",
                                "pattern": "^[\\sa-zA-Z0-9-]{0,8}$",
                                "example": "SWR 423"
                              },
                              "countyName": {
                                "type": "string",
                                "title": "County Name",
                                "maxLength": 30,
                                "description": "Name of county",
                                "pattern": "^[\\sa-zA-Z]{1,30}$",
                                "example": "West Midlands"
                              },
                              "country": {
                                "type": "string",
                                "title": "Country",
                                "maxLength": 2,
                                "description": "Name of counrty ",
                                "pattern": "^[\\sa-zA-Z]{1,2}$",
                                "example": "GB"
                              },
                              "addressLine1": {
                                "type": "string",
                                "title": "Address Line 1",
                                "maxLength": 35,
                                "description": "First line of address or in the case of BFPO this will be unit/regiment",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "Unit 6, Welsh Guards"
                              },
                              "addressLine2": {
                                "type": "string",
                                "title": "Address Line 2",
                                "maxLength": 35,
                                "description": "Second line of address or in the case of BFPO this will be BFPO Number",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "BFPO 16"
                              },
                              "addressLine3": {
                                "type": "string",
                                "title": "Address Line 3",
                                "maxLength": 35,
                                "description": "Third line of address or in the case of BFPO this will be set as BFPO",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "BFPO"
                              },
                              "addressLine4": {
                                "type": "string",
                                "title": "Address Line 4",
                                "maxLength": 35,
                                "description": "Fourth line of address or in the case of BFPO this will be Staff number, rank and name",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "987654321 Col. Susan Powell"
                              },
                              "addressLine5": {
                                "type": "string",
                                "title": "Address Line 5",
                                "maxLength": 35,
                                "description": "Fifth line of address or in the case of BFPO this will be Operation/location name (optional)",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                                "example": "Operation Catflap"
                              },
                              "pafStatus": {
                                "type": "string",
                                "title": "PAF Status",
                                "description": "Values expressing the PAF state of an address.The values are PAF_Address-Address on PAF,PAF_Overriden-Address on PAF but overridden,Non_PAF_Address-Address not on PAF",
                                "enum": [
                                  "PAF_Address",
                                  "PAF_Overriden",
                                  "Non_PAF_Address"
                                ],
                                "pattern": "^[\\sa-zA-Z0-9-_]{1,15}$"
                              },
                              "deliveryPointSuffix": {
                                "type": "string",
                                "title": "Delivery Point Suffix",
                                "maxLength": 2,
                                "description": "The DPS is a two character identifier, e.g. 2B which when added to the Postcode gives a unique delivery point identifier to a live delivery point. Once the delivery point is deleted from PAF the DPS may be reused. The DPS for a Large User is always '1A' as each Large User has its own Postcode.",
                                "pattern": "^[\\sa-zA-Z0-9-]{2}$",
                                "example": "9Z"
                              },
                              "poBoxNumber": {
                                "type": "string",
                                "title": "PO Box Number",
                                "maxLength": 6,
                                "description": "po box number of postal address",
                                "pattern": "^[0-9]{6}$",
                                "example": 146
                              }
                            },
                            "additionalProperties": false
                          },
                          "contactPointRole": {
                            "type": "object",
                            "title": "Contact Point Role",
                            "description": "Contact Point Role Details",
                            "properties": {
                              "contactPointRoleSoftLock": {
                                "type": "string",
                                "title": "CP Role SoftLock",
                                "description": "contact point role softlock is the reference to conatc point role. contact point role links involved party with contact point.  This field must always be sourced from a previous CIS response",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                                "example": "0923493934242345864137808425673452",
                                "maxLength": 34
                              },
                              "contactPointRoleAddressPrefix": {
                                "type": "string",
                                "title": "Communication Point Role Address Prefix",
                                "maxLength": 78,
                                "description": "Address Prefix Contains info on items such as POA\n",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,78}$"
                              },
                              "contactPointUnavailableReason": {
                                "type": "string",
                                "title": "Role Unavailability Reason",
                                "maxLength": 4,
                                "description": "Reason for unavailability of contact point. e.g. No Trace, No Mail etc. Please refer to TMS Table 18 for code/values\n",
                                "pattern": "^[0-9]{1,4}$",
                                "example": "0001"
                              },
                              "contactPointMailingAddressIndicator": {
                                "type": "boolean",
                                "title": "Mailing Address Indicator",
                                "description": "Indicates if contact point is a mailing address. Set to true if contact point is preferred mailing address.\n",
                                "default": false
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "taxDetails": {
                      "description": "A list of taxation and FATCA data",
                      "type": "object",
                      "properties": {
                        "selfCertDeclaration": {
                          "type": "string",
                          "title": "Self Cert Declaration",
                          "description": "AKA self-dicationDeclaration field.   B=Customer required to declare D=Customer has declaration.  Meaning of value can be taken from TMS 1153, SelfCertifot answered N=Non UK citizen and/or pay tax outside of UK X=Not Required Y=Only a UK citizen and only resident in the UK for tax purposes Space=Individual with no in scope products\n",
                          "enum": [
                            "B",
                            "D",
                            "N",
                            "X",
                            "Y"
                          ],
                          "example": "B"
                        },
                        "taxRecords": {
                          "description": "List of tax records",
                          "type": "array",
                          "items": {
                            "properties": {
                              "selfCertDate": {
                                "type": "string",
                                "title": "Self Cert Date",
                                "description": "As defined by full-date - RFC3339 YYYY-MM-DD\n",
                                "format": "date",
                                "example": "YYYY-MM-DD"
                              },
                              "countryCode": {
                                "type": "string",
                                "title": "Country Code",
                                "maxLength": 2,
                                "pattern": "^[\\sa-zA-Z]{1,2}$",
                                "example": "GB"
                              },
                              "taxType": {
                                "type": "string",
                                "title": "Tax type",
                                "description": "Tax type. Possible values R = Residential C = Citizenship D = Not Asked\n",
                                "enum": [
                                  "R",
                                  "C",
                                  "D"
                                ]
                              },
                              "taxIdNumber": {
                                "type": "string",
                                "title": "Tax ID Number",
                                "maxLength": 20,
                                "description": "Tax Id number",
                                "pattern": "^[\\sa-zA-Z0-9-]{1,20}$"
                              },
                              "declineReasonCode": {
                                "type": "string",
                                "maxLength": 4,
                                "description": "Reason code for non-capture of self certification\ndeclaration \n",
                                "pattern": "^\\d{1,4}$"
                              }
                            },
                            "additionalProperties": false,
                            "required": [
                              "taxType"
                            ]
                          }
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InvolvedParty Details successfully updated.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty PUT response",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "involvedPartySoftLock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "taxRecordSoftLocks": {
                  "description": "List of tax record SoftLocks in the same order as input",
                  "type": "array",
                  "items": {
                    "properties": {
                      "taxRecordSoftLock": {
                        "type": "string",
                        "description": "SoftLock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,23}$",
                        "example": "09234939342423458641374",
                        "maxLength": 23
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": " 1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 -\nCommunicationPointRoleType'\n",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "moreProcessing": {
                        "description": "This represents if there are further agreements for which the address needs to change. Format: aaaabbbbbbbbbb (14) where: aaaa is the agreement role type (4) bbbbbbbbbb is the agreement reference number (10)",
                        "type": "string",
                        "maxLength": 14,
                        "pattern": "^[\\sa-zA-Z0-9]{1,14}$"
                      },
                      "numberOfAccounts": {
                        "description": "Number of accounts that have passed Member Profile\neligibility during Standard Change of Address and a move to a\nnew addr will be attempted.\n",
                        "type": "string",
                        "maxLength": 3
                      },
                      "moveAccountStatus": {
                        "description": "This element represents the list of accounts/agreements which\nhave been successfully moved and accounts that can not be moved.\nNote - This object will be returned for Standard Change of Address (STCOA) or Exception Change of Address (COA-E)\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountReference": {
                              "description": "The external account number, account number the\ncustomer knows.\n",
                              "type": "string"
                            },
                            "partialCCPAN": {
                              "title": "Partial Credit Card PAN",
                              "type": "string",
                              "description": "This is the obfuscated value of the credit card PAN    \n"
                            },
                            "accountHostLocation": {
                              "description": "\"The location or system application ID. Identifies the source account system. Values derived from TMSII View No. 257 - Agreement Element Location\" \n",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountSubTypeCode": {
                              "description": "Product code",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountLifecycleStatus": {
                              "description": "Agreement status. Values derived from TMSII Table No. 7.",
                              "type": "string",
                              "maxLength": 4
                            },
                            "reasonCode": {
                              "description": "Reason for account updated or not. Following can be set of some values -\n  0 - Agreement Amended Successfully\nNote - The following reason codes and descriptions are specific to Standard Change Of Address\n  1 - Role not qualifying for STCOA\n  2 - Address prefix found - STCOA NOT Allowed\n  3 - Not  primary credit card holder -STCOA not allowed\nNote - The following reason codes and descriptions are specific to Exception Change of Address\n  4 - Account not found\n  5 - Not an NBS account\n  6 - Account is closed\n  7 - Agreement Role not found\n  8 - No open Agreement Role found\n  9 - Not  primary credit card holder â ECOA not allowed                \n",
                              "type": "string",
                              "maxLength": 4,
                              "example": "0000"
                            },
                            "reasonDescription": {
                              "description": "Reason reject or updated description.",
                              "type": "string",
                              "maxLength": 65
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            },
            "examples": {
              "Example of Address Update - 1 (Accounts meet the Member Profile Eligibility) - Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessing": "ABCD0123456789",
                    "numberOfAccounts": 6,
                    "moveAccountStatus": [
                      {
                        "accountreference": "1234567890",
                        "partialCCPAN": "TestReference",
                        "accountHostLocation": "81",
                        "accountSubTypeCode": "00002127",
                        "accountLifecycleStatus": "1",
                        "reasonCode": "03",
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ]
                  }
                ]
              },
              "Example of an Address Update - 2 (Accounts does not meet the Member Profile Eligibility)- Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessing": "ABCD0123456789",
                    "numberOfAccounts": 3,
                    "moveAccountStatus": []
                  }
                ]
              }
            }
          },
          "207": {
            "description": "InvolvedParty Details updated patially",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty PUT response",
              "allOf": [
                {
                  "$ref": "#/definitions/Errors"
                },
                {
                  "type": "object"
                }
              ],
              "description": "Error code and message will be used to communicate failure to consumer. This block provides the ability to create internal error code and message communicating the causes of the error. Validation errors for GET, PUT, PATCH and POST requests will need a field breakdown. This is best modelled by using an error code for validation failures and providing the detailed errors message in error message field.\n",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": "1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 - CommunicationPointRoleType",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "moreProcessing": {
                        "description": "This represents if there are further agreements for which the address needs to change. Format: aaaabbbbbbbbbb (14) where: aaaa is the agreement role type (4) bbbbbbbbbb is the agreement reference number (10)",
                        "type": "string",
                        "maxLength": 14,
                        "pattern": "^[\\sa-zA-Z0-9]{1,14}$"
                      },
                      "numberOfAccounts": {
                        "description": "Number of accounts that have passed Member Profile\neligibility during Standard Change of Address and a move to a\nnew addr will be attempted.\n",
                        "type": "string",
                        "maxLength": 3
                      },
                      "moveAccountStatus": {
                        "description": "This element represents the list of accounts/agreements which\nhave been successfully moved and accounts that have failed\nmember accounts eligibility and therefore can not be moved.\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountReference": {
                              "description": "The external account number, account number the\ncustomer knows.\n",
                              "type": "string"
                            },
                            "partialCCPAN": {
                              "title": "Partial Credit Card PAN",
                              "type": "string",
                              "description": "This is the obfuscated value of the credit card PAN\n"
                            },
                            "accountHostLocation": {
                              "description": "\"The location or system application ID. Identifies the source account system. Values derived from TMSII View No. 257 - Agreement Element Location\"\n",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountSubTypeCode": {
                              "description": "Product code",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountLifecycleStatus": {
                              "description": "Agreement status. Values derived from TMSII Table No. 7.",
                              "type": "string",
                              "maxLength": 4
                            },
                            "reasonCode": {
                              "description": "Reason for account updated or not. Following can be set of some values -\n  0 - Agreement Amended Successfully\nNote - The following reason codes and descriptions are specific to Standard Change Of Address\n  1 - Role not qualifying for STCOA\n  2 - Address prefix found - STCOA NOT Allowed\n  3 - Not  primary credit card holder -STCOA not allowed\nNote - The following reason codes and descriptions are specific to Exception Change of Address\n  4 - Account not found\n  5 - Not an NBS account\n  6 - Account is closed\n  7 - Agreement Role not found\n  8 - No open Agreement Role found\n  9 - Not  primary credit card holder â ECOA not allowed\n",
                              "type": "string",
                              "maxLength": 4,
                              "example": "0"
                            },
                            "reasonDescription": {
                              "description": "Reason reject or updated description.",
                              "type": "string",
                              "maxLength": 65
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "rowErrorText": {
                        "type": "string",
                        "maxLength": 50,
                        "description": "Error Text at each communication point level, represents the error description for each Communication Point row",
                        "example": "Communication point is not valid"
                      },
                      "rowErrorCategory": {
                        "type": "string",
                        "maxLength": 30,
                        "description": "Error Category at each communication point level",
                        "example": "validation error"
                      },
                      "rowErrorNumber": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Error number at each communication point level",
                        "example": "01"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              }
            },
            "examples": {
              "Example of Partial Sucess 1 - When tried to update both CP role fields and Sequence number in sequnetial calls. The Sequence number update failed and CP role details are successfully updated": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.001",
                    "message": "Failed to update mailing address indicator (sequence number)",
                    "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
                  }
                ],
                "contactPreferences": [
                  {
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452"
                  }
                ]
              },
              "Example of Partial Sucess 2 - Any one contact preferences instance updated with error details while creating Communication Point": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "16"
                  },
                  {
                    "rowErrorText": "Communication point is not valid",
                    "rowErrorCategory": "Validation Error",
                    "rowErrorNumber": "02"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "502": {
            "description": "Bad Gateway",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      },
      "get": {
        "summary": "Get an Involved Party Details",
        "description": "This service operation is used to retrieve customer details from the Customer Information System (CIS). The involved party number will be passed as the input and the response will be details of the customer such as Name, âBestâ Address, ID Status, etc. This data will be returned to the consuming service unfiltered.",
        "operationId": "GetInvolvedPartyDetails",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          }
        ],
        "responses": {
          "200": {
            "description": "InvolvedParty Details successfully retrieved.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty GET response",
              "type": "object",
              "properties": {
                "involvedPartyType": {
                  "type": "string",
                  "title": "Involved Party Type",
                  "description": "The code used to distinguish the category of the involved party. As derived from TMS Table No: 59 Name: Involved Party Type Code",
                  "minLength": 1,
                  "maxLength": 4,
                  "example": "1"
                },
                "involvedPartyId": {
                  "type": "string",
                  "title": "Involved Party Id",
                  "description": "Specifies the unique Identifier used to identify an InvolvedParty",
                  "minLength": 1,
                  "maxLength": 10,
                  "example": "7657645656"
                },
                "involvedPartySoftLock": {
                  "type": "string",
                  "title": "Involved Party SoftLock",
                  "description": "Soft lock used to make sure that future updates are made against the latest record. If the customer number input was victim of a merge may be a different number",
                  "minLength": 1,
                  "maxLength": 12,
                  "example": "765764565667"
                },
                "involvedPartyDetails": {
                  "type": "object",
                  "description": "Specifies the involved party details",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "title": "individual",
                      "description": "Customer Information",
                      "properties": {
                        "prefixTitle": {
                          "type": "string",
                          "title": "Prefix Title",
                          "description": "This is the title of the customer. Values derived from TMS View No: 247 Name: InvvdPtyIndivTitle",
                          "example": "1",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "firstName": {
                          "type": "string",
                          "title": "First Name",
                          "description": "This is the customer forename",
                          "example": "Jonathan",
                          "minLength": 1,
                          "maxLength": 15
                        },
                        "middleName1": {
                          "type": "string",
                          "title": "Middle Name1",
                          "description": "This is the customer 2nd forename",
                          "example": "Edward",
                          "minLength": 1,
                          "maxLength": 15
                        },
                        "middleName2": {
                          "type": "string",
                          "title": "Middle Name2",
                          "description": "This is the customer 3rd forename",
                          "example": "Simon",
                          "minLength": 1,
                          "maxLength": 15
                        },
                        "lastName": {
                          "type": "string",
                          "title": "Last Name",
                          "description": "This is the customer surname",
                          "example": "Smith",
                          "minLength": 1,
                          "maxLength": 30
                        },
                        "initials": {
                          "type": "string",
                          "title": "Initials",
                          "description": "This is the customer name initials",
                          "example": "JS",
                          "minLength": 1,
                          "maxLength": 6
                        },
                        "suffixTitle": {
                          "type": "string",
                          "title": "Suffix Title",
                          "description": "This is the code to show any honours the involved party holds. As derived from TMS Table No: 48 Name: Invvd Pty Indiv Honorific",
                          "example": "01",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "preferredName": {
                          "type": "string",
                          "title": "Preferred Name",
                          "description": "This is the customer's name which they prefer to be addressed by",
                          "example": "John",
                          "minLength": 1,
                          "maxLength": 15
                        },
                        "birthDate": {
                          "type": "string",
                          "title": "Birth Date",
                          "format": "date",
                          "description": "Customer's Date of birth",
                          "example": "1999-12-25"
                        },
                        "maritalStatus": {
                          "type": "string",
                          "title": "Marital Status",
                          "description": "A code allocated that defines the marital status of the involved party. TMS View No: 146 Name: InvvdPtyIndivMaritalStatus",
                          "example": "1",
                          "maxLength": 4
                        },
                        "numberOfDependents": {
                          "type": "string",
                          "title": "Number of Dependents",
                          "description": "Count of dependents that a customer has. This is a max 2 digit length for number of dependents",
                          "example": "1",
                          "maxLength": 2
                        },
                        "gender": {
                          "type": "string",
                          "title": "Gender",
                          "description": "Gender of the Involved Party e.g. 1 for Female, 2 for Male etc. As derived from TMS View No: 140 Name: Invvd Pty Indiv Gender",
                          "example": "2",
                          "maxLength": 4
                        },
                        "nationalInsuranceNumber": {
                          "type": "string",
                          "title": "NI Number",
                          "description": "National insurance number of customer",
                          "example": "AB123456C",
                          "maxLength": 9
                        },
                        "accessibilityNeeds": {
                          "type": "string",
                          "title": "Accessability Needs",
                          "description": "A code to show the correspondence preference of the involved party. As derived from TMS Table No: 484 Name: Particular Needs",
                          "example": "1",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "citizenshipCountryCode": {
                          "type": "array",
                          "title": "Nationality",
                          "description": "National registration of involved party. Values from TMSII View No. 350 - Invvd Pty Indiv Nationality 1",
                          "items": {
                            "type": "string",
                            "maxLength": 4,
                            "pattern": "^[0-9]{0,4}$",
                            "example": "44"
                          }
                        },
                        "deceasedStatus": {
                          "type": "string",
                          "title": "Deceased Status",
                          "description": "The deceased status of the involved Party. Please refer to TMS Table No: 46 Name:Invvd Pty Indiv Death Indicator for values",
                          "example": "4",
                          "minLength": 1,
                          "maxLength": 4
                        },
                        "deceasedDate": {
                          "type": "string",
                          "title": "Deceased Date",
                          "format": "date",
                          "description": "CCYYMMDD Refer to IdvDeathDate which indicates the state of this information",
                          "example": "2020-04-20"
                        },
                        "signatureHeldIndicator": {
                          "type": "string",
                          "title": "Signature Held Indicator",
                          "description": "Indicates whether the customer has a signature held in the central repository. Y - electronic signature held and Space - electronic signature not held",
                          "example": "Y",
                          "maxLength": 1
                        },
                        "electronicAGMIndicator": {
                          "type": "string",
                          "title": "Electronic AGM Indicator",
                          "description": "Indicates the eligibility to electronically vote in the AGM. Y - Electronic AGM Required,  N - Electronic AGM Not Required and Space - Default (AGM Not Required",
                          "example": "N",
                          "maxLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "organisation": {
                      "type": "object",
                      "title": "Organisation",
                      "description": "Details of organisation",
                      "properties": {
                        "establishedDate": {
                          "type": "string",
                          "title": "Established Date",
                          "description": "Establishment date of organisation",
                          "format": "date",
                          "example": "2019-01-01"
                        },
                        "organisationName": {
                          "type": "string",
                          "title": "Organisation Name",
                          "description": "Name of organisation",
                          "maxLength": 55,
                          "example": "Nationwide Building Society"
                        },
                        "classification": {
                          "type": "string",
                          "title": "Organisation Classification",
                          "description": "A code to show the Standard Industry of the organisation. As derived from TMS Table No: 66 Name: SIC for values",
                          "maxLength": 2,
                          "example": "03"
                        },
                        "subClassification": {
                          "type": "string",
                          "title": "Organisation SubClassification",
                          "description": "The sub-code to show the Standard Industry of the organisation. As derived from TMS Table No: 66 Name: SIC for values",
                          "maxLength": 2,
                          "example": "24"
                        }
                      },
                      "additionalProperties": false
                    },
                    "marketingPreferences": {
                      "type": "object",
                      "title": "Marketing Preferences",
                      "description": "GDPR flags for marketing consent",
                      "properties": {
                        "post": {
                          "type": "string",
                          "title": "Post Indicator",
                          "description": "Postal preference of customer.  ? - Customer has not expressed a preference to market by phone, Y - Customer has requested we do not market by phone,  N - Customer actively requested we do market by phone  Space - Can market by phone (by default)",
                          "example": "N",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "telephone": {
                          "type": "string",
                          "title": "Telephone Indicator",
                          "description": "Telephone preference of customer. ? - Customer has not expressed a preference to market by phone Y - Customer has requested we do not market by phone  N - Customer actively requested we do market by phone  Space - Can market by phone (by default)",
                          "example": "Y",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "email": {
                          "type": "string",
                          "title": "Email Indicator",
                          "description": "Email preference of customer. ? - Customer has not expressed a preference to market by Email Y - Customer has requested we do not market by Email  N - Customer actively requested we do market by Email  Space - Can market by Email (by default)",
                          "example": "Y",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "online": {
                          "type": "string",
                          "title": "Online Indicator",
                          "description": "Online preference of customer.  Y - Customer has requested we do not prompt on-line N,Space - Can prompt on-line (by default)",
                          "example": "Y",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "faceToFace": {
                          "type": "string",
                          "title": "Face to Face Indicator",
                          "description": "Face to Face preference of customer. Y - Customer has requested we do not prompt face to face N,Space - Can prompt face to face (by default)",
                          "example": "N",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "viaPhone": {
                          "type": "string",
                          "title": "via Phone Indicator",
                          "description": "Via Phone preference of customer. Y - Customer has requested we do not prompt by phone N,Space - Can prompt by phone (by default)",
                          "example": "Y",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "smsService": {
                          "type": "string",
                          "title": "SMS Service Indicator",
                          "description": "SMS service preference of customer. ? - Customer has not expressed a preference to Service by SMS Y - Customer has requested we do not Service by SMS  N - Customer actively requested we do Service by SMS  Space - Can Service by SMS (by default)",
                          "example": "Y",
                          "minLength": 1,
                          "maxLength": 1
                        },
                        "smsMarketing": {
                          "type": "string",
                          "title": "SMS Marketing Indicator",
                          "description": "SMS marketing preference of customer. ? - Customer has not expressed a preference to market by SMS Y - Customer has requested we do not market by SMS  N - Customer actively requested we do market by SMS  Space - Can market by SMS (by default)",
                          "example": "N",
                          "minLength": 1,
                          "maxLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "membershipStatus": {
                      "type": "object",
                      "title": "Membership Status",
                      "description": "Membership status of Involved Party",
                      "properties": {
                        "membershipStatusCode": {
                          "type": "string",
                          "title": "Membership Status Code",
                          "description": "membership start of the Involved Party. Refer TMS Table No. 644 â IndividualMembershipCode",
                          "minLength": 1,
                          "maxLength": 1,
                          "example": "1"
                        },
                        "membershipStartDate": {
                          "type": "string",
                          "format": "date",
                          "title": "Membership Status Date",
                          "description": "membership start date of Involved Party",
                          "example": "2016-04-05"
                        }
                      },
                      "additionalProperties": false
                    },
                    "doNotMergeIndicator": {
                      "type": "string",
                      "title": "Merge Indicator",
                      "description": "Y - Do not merge this Customer Space - Customer merge allowed",
                      "example": "N",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "tssRegisteredInd": {
                      "type": "string",
                      "title": "TSS Registered Indicator",
                      "description": "Registered for telephone self service banking indicator Y - registered for telephone self service banking  N - de-registered from telephone self service banking (member request)  Blank - never registered for telephone self service banking ? - Blocked from telephone self service banking by SID",
                      "example": "Y",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "iBRegStatus": {
                      "type": "string",
                      "title": "IB Registration Status",
                      "description": "Internet Bank Registration Status Values - <Space> = Never been registered for IB, Y = Registered for IB, N = Customer de-registered from IB, (i.e. the indicator is set to N rather than being reset back to <Space>), ? = Registration suspended/blocked pending investigation (in the case of fraud, etc)",
                      "example": "Y",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "idCheckStatusCode": {
                      "type": "string",
                      "title": "Identification Check Status Code",
                      "description": "Identification Check Status Code TMS Table No: 508 Name: IdentificationCheckStatusCode Identification Check Status Value from the IdentificationCheckStatusCode TMS table '1: ID Passed' '2: ID Required' '3: Declined' '4: Referral Outstanding' '5: ID Confirmed' '6: ID Not Confirmed' '7: Refer   Paper Id' '8: Refer   MLRT' '9: Refer   SID' '10: Remote ID' '99: Retro Passed'",
                      "example": "99",
                      "minLength": 1,
                      "maxLength": 4
                    },
                    "contactPreferences": {
                      "type": "array",
                      "description": "Holds the list of contact preferences of an involved party (individual or organisation). A contactPreferences is typed to either a telephoneNumber, emailAddress, postalAddress using the medium field.\n",
                      "items": {
                        "type": "object",
                        "properties": {
                          "medium": {
                            "type": "string",
                            "title": "Medium",
                            "description": "Way of communication to customer",
                            "example": "Phone",
                            "maxLength": 10
                          },
                          "contactPointSoftLock": {
                            "type": "string",
                            "title": "CP SoftLock",
                            "description": "This is reference to contact point within CIS. It is combination of contact\n    point reference number and update level. Contact Point Softlock used to make sure update is against latest record, must retain\nand passed for updates ",
                            "example": "092349393424",
                            "minLength": 1,
                            "maxLength": 12
                          },
                          "contactPointStartDate": {
                            "type": "string",
                            "title": "CP Start Date",
                            "format": "date",
                            "description": "As defined by full-date - RFC3339 YYYY-MM-DD",
                            "example": "2000-12-31"
                          },
                          "contactPointUsage": {
                            "type": "string",
                            "title": "CP Usage",
                            "description": "Identifies the method and destination of a communication contact",
                            "example": "16",
                            "minLength": 1,
                            "maxLength": 4
                          },
                          "phoneType": {
                            "type": "string",
                            "title": "CP Phone Type",
                            "description": "Type of phone",
                            "example": "Mobile",
                            "minLength": 1,
                            "maxLength": 30
                          },
                          "geographicReferenceTypeCode": {
                            "type": "string",
                            "title": "Geo Ref Type Code",
                            "description": "TMS Table No: 32 Name: Geog Ref Code",
                            "example": "1",
                            "minLength": 1,
                            "maxLength": 4
                          },
                          "contactPointTelephoneNumber": {
                            "type": "object",
                            "title": "CP Telephone Number",
                            "description": "Details related to a Fixedline or Mobile number. Phone number will be returned into two parts assigning into areaCode and localNumber along with countryPhoneCode.\n",
                            "properties": {
                              "areaCode": {
                                "type": "string",
                                "title": "Area Code",
                                "description": "It is the identifier for a geographic location",
                                "example": "0208",
                                "minLength": 1,
                                "maxLength": 10
                              },
                              "countryPhoneCode": {
                                "type": "string",
                                "title": "Country Phone Code",
                                "description": "It is the identifier for a country telephone number",
                                "example": "GB",
                                "minLength": 1,
                                "maxLength": 2
                              },
                              "localNumber": {
                                "type": "string",
                                "title": "Local Number",
                                "description": "Local number of involved party",
                                "example": "9975521",
                                "minLength": 1,
                                "maxLength": 100
                              },
                              "extensionNumber": {
                                "type": "string",
                                "title": "Extension Number",
                                "description": "Extension number of involved party",
                                "example": "120048",
                                "minLength": 1,
                                "maxLength": 6
                              }
                            },
                            "additionalProperties": false
                          },
                          "contactPointEmailAddress": {
                            "type": "string",
                            "title": "Email",
                            "description": "Email address aka Electronic Address",
                            "example": "Perter@address.co.uk",
                            "minLength": 1,
                            "maxLength": 100
                          },
                          "contactPointAddressComponent": {
                            "description": "Contains an address types and address information populated by data available.",
                            "type": "object",
                            "title": "Postal Address",
                            "properties": {
                              "unitNumber": {
                                "type": "string",
                                "title": "Unit Number",
                                "description": "Sub Building Name",
                                "example": "23A",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "buildingNumber": {
                                "type": "string",
                                "title": "Building Number",
                                "description": "Number of building",
                                "example": "34",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "buildingName": {
                                "type": "string",
                                "title": "Building Name",
                                "description": "Name of building",
                                "example": "The Downs",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "city": {
                                "type": "string",
                                "title": "City",
                                "description": "Postal Town Name",
                                "example": "Swindon",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "thoroughfareName": {
                                "type": "string",
                                "title": "Thoroughfare Name",
                                "description": "Name of Thoroughfare",
                                "example": "Hill Street",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "dependentThoroughfareName": {
                                "type": "string",
                                "title": "Sub Thoroughfare Name",
                                "description": "Sub Thorough fare Name",
                                "example": "Pyre Close",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "dependentLocality": {
                                "type": "string",
                                "title": "Dependent Locality",
                                "description": "Locality Name",
                                "example": "Bethnal Green",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "doubleDependentLocality": {
                                "type": "string",
                                "title": "Double Dependent Locality",
                                "description": "Sub Locality Name",
                                "example": "Whitehall",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "countyName": {
                                "type": "string",
                                "title": "County Name",
                                "description": "Name of county",
                                "example": "UK",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "postalCode": {
                                "type": "string",
                                "title": "Postal Code",
                                "description": "Postal code of the address. This includes Inward and Outward post codes, both",
                                "example": "SWR 423",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "country": {
                                "type": "string",
                                "title": "Country",
                                "description": "Name of country. TMS Table No: 142 Name: Country",
                                "example": "UK",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "addressLine1": {
                                "type": "string",
                                "title": "Address Line 1",
                                "description": "First line of address or in the case of BFPO this will be unit/regiment",
                                "example": "1234123 Captain Pete",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "addressLine2": {
                                "type": "string",
                                "title": "Address Line 2",
                                "description": "Second line of address or in the case of BFPO this will be BFPO Number",
                                "example": "Beta Unit",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "addressLine3": {
                                "type": "string",
                                "title": "Address Line 3",
                                "description": "Third line of address or in the case of BFPO this will be set as BFPO",
                                "example": "Antarctica",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "BFPONumber": {
                                "type": "string",
                                "description": "BFPO number of postal address",
                                "example": "39",
                                "minLength": 1,
                                "maxLength": 30
                              },
                              "poBoxNumber": {
                                "type": "string",
                                "title": "PO Box Number",
                                "description": "PO box number of postal address",
                                "example": "000222",
                                "minLength": 1,
                                "maxLength": 6
                              }
                            },
                            "additionalProperties": false
                          },
                          "contactPointRole": {
                            "type": "object",
                            "title": "Contact Point Role",
                            "description": "Contact Point Role Details",
                            "properties": {
                              "contactPointRoleSoftLock": {
                                "type": "string",
                                "title": "CP Role SoftLock",
                                "description": "This is reference to contact point within CIS. It is combination of contact\n    point reference number and update level. Softlock used to make sure update is against latest record, must retain\nand passed for updates",
                                "example": "0923493934242345864137808425673452",
                                "minLength": 1,
                                "maxLength": 34
                              },
                              "contactPointUnavailableReason": {
                                "type": "string",
                                "title": "Role Unavailability Reason",
                                "description": "Reason for unavailability of contact point. e.g. No Trace, No Mail etc.TMS Table No: 18 Name: Comcn Pnt Rle Unavailability Rsn",
                                "example": "1233",
                                "minLength": 1,
                                "maxLength": 4
                              },
                              "preferredContactSequenceNumber": {
                                "type": "string",
                                "title": "Preferred Contact Sequence Number",
                                "description": "The preferred sequence for contacting an involved party",
                                "example": "1",
                                "minLength": 1,
                                "maxLength": 2
                              },
                              "contactPointRoleAddressPrefix": {
                                "type": "string",
                                "title": "CP Role Address Prefix",
                                "description": "Address Prefix Contains info on items such as POA",
                                "example": "POA",
                                "minLength": 1,
                                "maxLength": 78
                              }
                            },
                            "additionalProperties": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "taxDetails": {
                      "type": "object",
                      "description": "A list of taxation and FATCA data",
                      "properties": {
                        "selfCertDeclaration": {
                          "type": "string",
                          "title": "Self Cert Declaration",
                          "description": "AKA self-declaration.  Meaning of value can be taken from TMS 1153, SelfCertificationDeclaration field.   B=Customer required to declare D=Customer has not answered N=Non UK citizen and/or pay tax outside of UK X=Not Required Y=Only a UK citizen and only resident in the UK for tax purposes Space=Individual with no in scope products\n",
                          "example": "B",
                          "minLength": 1,
                          "maxLength": 1
                        }
                      },
                      "additionalProperties": false
                    },
                    "importantInvolvedPartyIndicator": {
                      "type": "string",
                      "title": "Important IP Indicator",
                      "description": "This indicates whether this involved party is to be treated as a very important person. Representative values are. Y - Customer is especially   important (director, ex director, prime   minister etc) Space - Not known if customer is especially important",
                      "example": "Y",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "ownerIdentifier": {
                      "type": "string",
                      "title": "Owner Identifier",
                      "description": "Defines the owner of the record. Representative values are TMS Table No: 822 Name: OwnerIdentifier",
                      "example": "1",
                      "minLength": 1,
                      "maxLength": 4
                    },
                    "staffCode": {
                      "type": "string",
                      "title": "Staff Code",
                      "description": "This classifies if an involved party is a member of staff. Values derived from TMS Table No: 170 Name: InvvdPartyStaffTypeMappingCodes",
                      "example": "0",
                      "minLength": 1,
                      "maxLength": 4
                    },
                    "suspectMatchIndicator": {
                      "type": "string",
                      "title": "SuspectMatch Indicator",
                      "description": "Suspect Match Indicator for customer.  Y - Suspect match exists for this customer N - Suspect match does not exist for this customer",
                      "example": "Y",
                      "minLength": 1,
                      "maxLength": 1
                    },
                    "customerWorth": {
                      "type": "object",
                      "description": "Indicator for the services being availed by customer",
                      "properties": {
                        "primacy": {
                          "type": "object",
                          "title": "Primacy Indicator",
                          "description": "Primacy Indicator for the prime services being availed by customer or not",
                          "properties": {
                            "bankingPrimacyIndicator": {
                              "type": "string",
                              "title": "Banking Primacy Indicator",
                              "description": "Primacy Banking Indicator. This data is currently only populated for individual customers.  Y - Prime Banking Customer N - Banking Customer But Not Prime ? - Not a Banking Customer  Space - Primacy for Banking Not Assessed",
                              "example": "Y",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "longTermSavingsPrimacyIndicator": {
                              "type": "string",
                              "title": "Long Term Savings Primacy Indicator",
                              "description": "Primacy Long Term Savings Indicator. This data is currently only populated for individual customers. Y - Prime Long Term Savings Customer N - Long Term Savings Customer but not prime ? - Not a Long Term Savings Customer  Space - Primacy for Long Term Savings Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "shortTermSavingsPrimacyIndicator": {
                              "type": "string",
                              "title": "Short Term Savings Primacy Indicator",
                              "description": "Primacy Short Term Savings Indicator. This data is currently only populated for individual customers.  Y - Prime Short Term Savings Customer N - Short Term Savings Customer but not prime ? - Not a Short Term Savings Customer  Space - Primacy for Short Term Savings Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "mortgagePrimacyIndicator": {
                              "type": "string",
                              "title": "Mortgage Primacy Indicator",
                              "description": "Primacy Mortgage Indicator. This data is currently only populated for individual customers.  Y - Prime Mortgage Customer N - Mortgage Customer but Not Prime ? - Not a Mortgage Customer  Space - Primacy for Mortgages Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "personalLoanPrimacyIndicator": {
                              "type": "string",
                              "title": "Personal Loan Primacy Indicator",
                              "description": "Primacy Personal Loan Indicator. This data is currently only populated for individual customers.  Y - Prime Personal Loan Customer N - Personal Loan Customer But Not Prime ? - Not a Personal Loan Customer Space - Primacy for Personal Loan Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "generalInsurancePrimacyIndicator": {
                              "type": "string",
                              "title": "General Insurance Primacy Indicator",
                              "description": "Primacy General Insurance Indicator. This data is currently only populated for individual customers.  Y - Prime General Insurance Customer N - General Insurance Customer But Not Prime ? - Not a General Insurance Customer  Space - Primacy for General Insurance Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "pensionPrimacyIndicator": {
                              "type": "string",
                              "title": "Pension Primacy Indicator",
                              "description": "Primacy Pension Indicator. This data is currently only populated for individual customers.  Y - Prime Pension Customer N - Pension Customer but Not Prime ? - Not a Pension Customer  Space - Primacy for Pension Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "lifeCoverPrimacyIndicator": {
                              "type": "string",
                              "title": "Life Cover Primacy Indicator",
                              "description": "Primacy Life Cover Indicator. This data is currently only populated for individual customers.  Y - Prime Life Cover Customer N - Life Cover Customer but Not Prime ? - Not a Life Cover Customer  Space - Primacy for Life Cover Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "investmentsPrimacyIndicator": {
                              "type": "string",
                              "title": "Investment Primacy Indicator",
                              "description": "Primacy Credit Card Indicator. This data is currently only populated for individual customers.  Y - Prime Credit Card Customer N - Credit Card Customer but Not Prime ? - Not a Credit Card Customer  Space - Primacy for Credit Cared Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "creditCardPrimacyIndicator": {
                              "type": "string",
                              "title": "Credit Card Primacy Indicator",
                              "description": "Primacy Credit Card Indicator. This data is currently only populated for individual customers.  Y - Prime Credit Card Customer N - Credit Card Customer but Not Prime ? - Not a Credit Card Customer  Space - Primacy for Credit Cared Not Assessed",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            }
                          },
                          "additionalProperties": false
                        },
                        "preAssessment": {
                          "type": "object",
                          "title": "Pre-Assessed Indicator",
                          "description": "Pre-Assessed Indicator for a  customer",
                          "properties": {
                            "bankingPreAssessmentIndicator": {
                              "title": "Banking PreAssessment Indicator",
                              "type": "string",
                              "description": "Pre-Assessed Banking Indicator. This data is currently only populated for individual customers.  Y - Likely to be accepted for a Banking Product  ? - Maybe likely to be accepted for a Banking Product  N - Not likely to be accepted for a Banking Product  Space - Not assessed for a Banking Product",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "creditCardPreAssessmentIndicator": {
                              "type": "string",
                              "title": "Credit Card PreAssessment Indicator",
                              "description": "Pre-Assessed Credit Card Indicator. This data is currently only populated for individual customers. Y - Likely to be accepted for a Credit Card  ? - Maybe likely to be accepted for a Credit Card  N - Not likely to be accepted for a Credit Card Space - Not assessed for a Credit Card",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "personalLoanPreAssessmentIndicator": {
                              "type": "string",
                              "title": "Personal Loan PreAssessment Indicator",
                              "description": "Pre-Assessed Personal Loan Indicator. This data is currently only populated for individual customers.",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            },
                            "mortgagePreAssessmentIndicator": {
                              "type": "string",
                              "title": "Mortgage PreAssessment Indicator",
                              "description": "Pre-Assessed Mortgage Indicator. This data is currently only populated for individual customers.  Y - Likely to be accepted for a Mortgage  ? - Maybe likely to be accepted for a Mortgage N - Not likely to be accepted for a Mortgage  Space - Not assessed for a Mortgage",
                              "example": "N",
                              "minLength": 1,
                              "maxLength": 1
                            }
                          },
                          "additionalProperties": false
                        },
                        "customerValue": {
                          "type": "string",
                          "title": "Customer Value",
                          "description": "0 - Customer Value has not been Assessed 1 - Prime Flex and Prime Mortgage and Prime Savings/Investment Held 2 -Prime Flex and Prime Mortgage Held 3 -Prime Flex and Prime Savings/Investment Held 4 - Non Prime Flex and Prime Mortgage Held and Prime Savings/Investment Held 5 - Prime Mortgage and Prime Savings/Investment Held 6 - Non Prime Flex and Prime Mortgage Held 7 - Non Prime Flex and Savings/Investment Held 8 - Prime Mortgage Held 9 - Prime Savings/Investment Held 10 - Prime Flex Held and Non Prime Savings/Investment Held 11 - Prime Flex Held 12 - Non Prime Savings/Investment Held 13 - Non Prime Flex Held and Non Prime Savings/Investment Held 14 - Non Prime Flex Held 15 - Non Core Products Only Held",
                          "example": "0",
                          "minLength": 1,
                          "maxLength": 4
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/{involvedPartyId}/potential-matches-resolution": {
      "post": {
        "summary": "Resolves duplicate involved party records.",
        "description": "This service accepts a 'merge' block consisting of one survivor involved party details and a list of victim(duplicate) involved parties to merge with the survivor. It accepts a 'noMerge' block consisting of one involved party in context and a list of suspected duplicate involved parties that are 'no match' for the party in context. The service updates the survivor involved party details in system of record, merges the duplicate involved parties with the survivor and marks the suspect duplicates as 'no match' for the involved party in context.",
        "operationId": "PostResolvePotentialMatches",
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          },
          {
            "in": "body",
            "name": "resolvePotentialMatchesRequest",
            "description": "Resolves duplicate involved party records.",
            "required": true,
            "schema": {
              "title": "Potential Matches Resolution Request.",
              "description": "Resolves duplicate involved party records.",
              "type": "object",
              "properties": {
                "merge": {
                  "type": "object",
                  "description": "This block contains details of the survivor involved party and a list of victim involved parties to be merged with the survivor involved party.",
                  "properties": {
                    "survivorIPDetails": {
                      "type": "object",
                      "description": "Personal details of involved party",
                      "properties": {
                        "involvedPartyId": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 10,
                          "pattern": "^\\d{1,10}$",
                          "description": "Specifies the unique Identifier used to identify an InvolvedParty",
                          "example": 1000098765
                        },
                        "ipSoftLock": {
                          "type": "string",
                          "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                          "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                          "example": "092349393424",
                          "maxLength": 12
                        },
                        "individual": {
                          "type": "object",
                          "description": "Details of Individual",
                          "properties": {
                            "prefixTitle": {
                              "type": "string",
                              "title": "Prefix title",
                              "maxLength": 4,
                              "description": "This is the customers title. Values dervied from TMSII View No. 247",
                              "pattern": "^[0-9]{1,4}$",
                              "example": "01"
                            },
                            "firstName": {
                              "description": "This is the customers forename",
                              "type": "string",
                              "title": "First Name",
                              "maxLength": 15,
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                              "example": "Charles"
                            },
                            "middleName1": {
                              "type": "string",
                              "title": "Middle Name1",
                              "maxLength": 15,
                              "description": "This is the customer 2nd forename",
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                              "example": "Maximillion"
                            },
                            "middleName2": {
                              "type": "string",
                              "title": "Middle Name2",
                              "maxLength": 15,
                              "description": "This is the customer 3rd forename",
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                              "example": "Benjamin"
                            },
                            "lastName": {
                              "description": "This is the customers surname",
                              "type": "string",
                              "title": "Last Name",
                              "maxLength": 30,
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,30}$",
                              "example": "Smith"
                            },
                            "initials": {
                              "type": "string",
                              "title": "Intials",
                              "maxLength": 6,
                              "description": "This is the customer name initials",
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,6}$",
                              "example": "C.M.B.S."
                            },
                            "suffixTitle": {
                              "type": "string",
                              "title": "Suffix Title",
                              "maxLength": 4,
                              "description": "This is the customers honorific, i.e. BSc. Values dervied from TMSII table No. 48",
                              "pattern": "^[0-9]{1,4}$",
                              "example": "01"
                            },
                            "preferredName": {
                              "description": "This is the customers name which they prefer to be addressed by",
                              "type": "string",
                              "title": "Preferred Name",
                              "maxLength": 15,
                              "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                              "example": "Benjamin"
                            },
                            "birthDate": {
                              "description": "This is a customers date of birth: Uses the UTC ISO 8601 Date Date format. For example 2017-01-01",
                              "type": "string",
                              "title": "Birth Date",
                              "format": "date",
                              "example": "2017-01-01T00:00:00.000Z"
                            },
                            "nationalInsuranceNumber": {
                              "description": "National insurance number of customer",
                              "type": "string",
                              "title": "NI Number",
                              "maxLength": 9,
                              "pattern": "^[A-Z]{2}\\d{6}[A-D]{1}$",
                              "example": "QQ123456C"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "involvedPartyId",
                        "ipSoftLock"
                      ]
                    },
                    "victimIPs": {
                      "description": "A list of victim(duplicate) involved parties that will be merged with the survivor involved party.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "involvedPartyId": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 10,
                            "pattern": "^\\d{1,10}$",
                            "description": "Specifies the unique Identifier used to identify an InvolvedParty",
                            "example": 1000098765
                          },
                          "ipSoftLock": {
                            "type": "string",
                            "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                            "maxLength": 12,
                            "example": 100009876511
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "involvedPartyId",
                          "ipSoftLock"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "survivorIPDetails",
                    "victimIPs"
                  ]
                },
                "noMerge": {
                  "description": "This block contains the involved party in context and a list of suspect involved parties that are 'not a match' for the involved party in context. Note: The involved party in context can be the same as or different than the survivor involved party. In either case, the involvedPartyInContextId is expected to be set by the consumer for no merges.",
                  "type": "object",
                  "properties": {
                    "involvedPartyInContextId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 10,
                      "pattern": "^\\d{1,10}$",
                      "description": "Specifies the unique Identifier used to identify an InvolvedParty",
                      "example": 1000098765
                    },
                    "suspectIPs": {
                      "description": "A list of suspect involved parties that are not a match for the involved party in context.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "involvedPartyId": {
                            "type": "string",
                            "minLength": 1,
                            "maxLength": 10,
                            "pattern": "^\\d{1,10}$",
                            "description": "Specifies the unique Identifier used to identify an InvolvedParty",
                            "example": 1000098765
                          },
                          "ipRelationshipSoftLock": {
                            "type": "string",
                            "maxLength": 34,
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                            "description": "A softLock that identifies the relationship between two involved parties.",
                            "example": "0923493934003010000987652017010102"
                          },
                          "iPRelnpEndReasonCode": {
                            "description": "Reason code to end an involved party relationship.Please refer TMS table 56 for the code and description for this.",
                            "type": "string",
                            "maxLength": 4,
                            "example": "0019"
                          }
                        },
                        "additionalProperties": false,
                        "required": [
                          "involvedPartyId",
                          "ipRelationshipSoftLock",
                          "iPRelnpEndReasonCode"
                        ]
                      }
                    }
                  },
                  "additionalProperties": false,
                  "required": [
                    "involvedPartyInContextId",
                    "suspectIPs"
                  ]
                },
                "journalData": {
                  "type": "string",
                  "description": "This field will contain the details required for Journaling.",
                  "example": "<JournalEvent><Deduplication></Deduplication></JournalEvent>"
                }
              },
              "additionalProperties": false,
              "required": [
                "journalData"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InvolvedParty Details successfully updated.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty POST response",
              "type": "object",
              "properties": {
                "involvedPartyInContextId": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 10,
                  "pattern": "^[\\d\\s]{1,10}$",
                  "description": "The CIS involvedParty ID."
                },
                "survivorIP": {
                  "type": "object",
                  "description": "The details of the survivor involved party. If the involved party details were updated in the system of record then the ipSoftLock will hold the updated value.",
                  "properties": {
                    "involvedPartyId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 10,
                      "pattern": "^[\\d\\s]{1,10}$",
                      "description": "The CIS involvedParty ID."
                    },
                    "ipSoftLock": {
                      "type": "string",
                      "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                      "maxLength": 12
                    }
                  },
                  "additionalProperties": false
                },
                "relatedParties": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "involvedPartyId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10,
                        "pattern": "^[\\d\\s]{1,10}$",
                        "description": "The CIS involvedParty ID."
                      },
                      "ipRelationshipSoftLock": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 34,
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "description": "The updated ipRelationshipSoftLock returned by the System Of Record."
                      },
                      "updatedStatus": {
                        "description": " 'Marked non-duplicate' indicates that this related party was marked as not a duplicate of the involved party in context. 'Merged' indicates that this related party was merged with the survivor involved party.",
                        "type": "string",
                        "enum": [
                          "Marked non-duplicate",
                          "Merged"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "SUCCESS_RESPONSE": {
                "involvedPartyInContextId": "1000098765",
                "survivorIP": {
                  "involvedPartyId": "0923493934",
                  "ipSoftLock": "092349393424"
                },
                "relatedParties": [
                  {
                    "involvedPartyId": "1000023456",
                    "updatedStatus": "Merged"
                  },
                  {
                    "involvedPartyId": "0923493333",
                    "ipRelationshipSoftLock": "0923493934003010000987652017010102",
                    "updatedStatus": "Marked non-duplicate"
                  }
                ]
              }
            }
          },
          "207": {
            "description": "Involved Party Details Partially Updated.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "Involved Party POST Partial Success Response",
              "type": "object",
              "properties": {
                "involvedPartyInContextId": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 10,
                  "pattern": "^[\\d\\s]{1,10}$",
                  "description": "The CIS involvedParty ID."
                },
                "survivorIP": {
                  "type": "object",
                  "description": "The details of the survivor involved party. If the involved party details were updated in the system of record then the ipSoftLock will hold the updated value.",
                  "properties": {
                    "involvedPartyId": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 10,
                      "pattern": "^[\\d\\s]{1,10}$",
                      "description": "The CIS involvedParty ID."
                    },
                    "ipSoftLock": {
                      "type": "string",
                      "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                      "maxLength": 12
                    }
                  },
                  "additionalProperties": false
                },
                "relatedParties": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "involvedPartyId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 10,
                        "pattern": "^[\\d\\s]{1,10}$",
                        "description": "The CIS involvedParty ID."
                      },
                      "ipRelationshipSoftLock": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 34,
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "description": "The updated ipRelationshipSoftLock returned by the System Of Record."
                      },
                      "updatedStatus": {
                        "description": " 'Marked non-duplicate' indicates that this related party was marked as not a duplicate of the involved party in context. 'Merged' indicates that this related party was merged with the survivor involved party.",
                        "type": "string",
                        "enum": [
                          "Marked non-duplicate",
                          "Merged"
                        ]
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "errorLog": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "involvedPartyId": {
                        "description": "A unique identifier used to identify a particular customer",
                        "type": "string",
                        "pattern": "^\\d{1,10}$",
                        "minLength": 1,
                        "maxLength": 10
                      },
                      "errorDetails": {
                        "$ref": "#/definitions/Errors"
                      }
                    }
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "RESOLVE_NO_DUPLICATES_ERROR": {
                "involvedPartyInContextId": "1000098765",
                "survivorIP": {
                  "involvedPartyId": "0923493934",
                  "ipSoftLock": "092349393424"
                },
                "relatedParties": [
                  {
                    "involvedPartyId": "1000023456",
                    "updatedStatus": "Merged"
                  }
                ],
                "errorLog": [
                  {
                    "involvedPartyId": "0923493333",
                    "errorDetails": {
                      "errors": [
                        {
                          "code": "NEM.ESB.IPM.500.304",
                          "message": "Error occurred in resolving non duplicate involved parties. See logs for details.",
                          "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
                        }
                      ]
                    }
                  }
                ]
              },
              "RESOLVE_DUPLICATES_ERROR": {
                "involvedPartyInContextId": "1000098765",
                "survivorIP": {
                  "involvedPartyId": "0923493934",
                  "ipSoftLock": "092349393424"
                },
                "relatedParties": [
                  {
                    "involvedPartyId": "0923493333",
                    "ipRelationshipSoftLock": "0923493934003010000987652017010102",
                    "updatedStatus": "Marked non-duplicate"
                  }
                ],
                "errorLog": [
                  {
                    "involvedPartyId": "1000023456",
                    "errorDetails": {
                      "errors": [
                        {
                          "code": "NEM.ESB.IPM.500.303",
                          "message": "Error occurred in merging duplicate involved parties. See logs for details.",
                          "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "502": {
            "description": "Bad Gateway",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/merge": {
      "put": {
        "summary": "Merge customers",
        "description": "This service merge the customers in to a single record.",
        "operationId": "PutMergeCustomers",
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "name": "mergeCustomers",
            "in": "body",
            "description": "Put merge customers object",
            "required": true,
            "schema": {
              "title": "Merge Customers PUT schema",
              "type": "object",
              "properties": {
                "survivorIPSoftLock": {
                  "type": "string",
                  "title": "Survivor Involved Party SoftLock",
                  "maxLength": 12,
                  "description": "Survivor Involved Party SoftLock.This field must always be sourced from a previous CIS response.\n",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$"
                },
                "victimIPSoftLock": {
                  "type": "string",
                  "title": "Victim Involved Party SoftLock",
                  "maxLength": 12,
                  "description": "Victim Involved Party SoftLock.This field must always be sourced from a previous CIS response.\n",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$"
                },
                "survivorIPId": {
                  "type": "string",
                  "title": "Survivor Involved Party Identifier",
                  "maxLength": 10,
                  "description": "Specifies the unique Identifier used to identify a Survivor InvolvedParty.Added for auditing purposes. This field must be presented when duplicates are presented to merge\n",
                  "pattern": "^\\d{1,10}$"
                },
                "victimIPId": {
                  "type": "string",
                  "title": "Victim Involved Party Identifier",
                  "maxLength": 10,
                  "description": "Specifies the unique Identifier used to identify a Victim InvolvedParty.Added for auditing purposes.This field must be presented when duplicates are presented to merge\n",
                  "pattern": "^\\d{1,10}$"
                }
              },
              "additionalProperties": false,
              "example": {
                "survivorIPSoftLock": "aaaaaaaaaauu",
                "victimIPSoftLock": "aaaaaaaaaauu",
                "survivorIPId": "0923493934",
                "victimIPId": "0823492354"
              },
              "required": [
                "survivorIPSoftLock",
                "victimIPSoftLock"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The customers are successfully Merged in to a single record and an Updated Survivor Involved Party SoftLock Returned back from CIS.\n",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "Merge Customers 200 Response",
              "type": "object",
              "properties": {
                "updatedSurvivorIPSoftLock": {
                  "description": "The CIS Updated Survivor Involved Party SoftLock",
                  "type": "string",
                  "maxLength": 12,
                  "example": "aaaaaaaaaauu (12) where aaaaaaaaaa is the IP reference number (10) with leading zeros if less than 10 digits and uu is the IP Header update level (2) with leading zero if less than 2 digits."
                }
              },
              "required": [
                "updatedSurvivorIPSoftLock"
              ],
              "additionalProperties": false
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/involved-parties/{involvedPartyId}/name-reorder-tokens": {
      "put": {
        "summary": "Updates an Name Details of an Involved Party and ,if requested, it updates and reorders cards & chequebooks.",
        "description": "This service takes in name details of an Individual.",
        "operationId": "PutNameReorderTokens",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          },
          {
            "in": "query",
            "name": "moreProcessing",
            "required": false,
            "type": "string",
            "minLength": 0,
            "maxLength": 27,
            "pattern": "^[\\sa-zA-Z\\d,_!/\"$%:;<=?@Â£\\.\\-\\*\\\\\\^\\{\\}\\(\\)\\+\\[\\]\\x23\\x27\\xD9\\xE3&]*$",
            "description": "This will be populated if there are more records to be updated for\nname details in continuation with previous call for a particular\nInvolved Party ID.\n"
          },
          {
            "name": "updateNameReorderTokensRequest",
            "in": "body",
            "description": "This service takes in name details of an Individual, indicator fields to determine if name is to be updated for card/chequebooks OR order for pin reminder.",
            "required": true,
            "schema": {
              "title": "InvolvedParty PUT schema for Name Change",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "individual": {
                  "type": "object",
                  "description": "Details of Individual",
                  "properties": {
                    "prefixTitle": {
                      "type": "string",
                      "maxLength": 4,
                      "description": "This is the customers title. Values dervied from TMSII View No. 247",
                      "example": "01",
                      "pattern": "^[0-9]{1,4}$"
                    },
                    "firstName": {
                      "description": "This is the customers forename",
                      "type": "string",
                      "maxLength": 15,
                      "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                      "example": "Jonathan"
                    },
                    "middleName1": {
                      "description": "This is the customers 2nd forename",
                      "type": "string",
                      "maxLength": 15,
                      "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                      "example": "James"
                    },
                    "middleName2": {
                      "description": "This is the customers 3rd forename",
                      "type": "string",
                      "maxLength": 15,
                      "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$"
                    },
                    "lastName": {
                      "description": "This is the customers surname",
                      "type": "string",
                      "maxLength": 30,
                      "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,30}$",
                      "example": "Granger"
                    },
                    "suffixTitle": {
                      "description": "This is the customers honorific, i.e. BSc. Values dervied from TMSII table No. 48",
                      "type": "string",
                      "maxLength": 4,
                      "example": "01",
                      "pattern": "^[0-9]{1,4}$"
                    },
                    "preferredName": {
                      "description": "This is the customers name which they prefer to be addressed by",
                      "type": "string",
                      "maxLength": 15,
                      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,15}$",
                      "example": "Benjamin"
                    },
                    "chosenName": {
                      "description": "This is the choosen name which needs to be updated for card & chequebooks. This can be a combination of Title, All forename initials, Surname (e.g. Mrs C J Ellis) Title, First forename, Second forename initial, Surname (e.g. Mrs Cyan J Ellis)",
                      "type": "string",
                      "maxLength": 50,
                      "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,50}$",
                      "example": "Mr Johnathan Granger"
                    },
                    "maritalStatus": {
                      "type": "string",
                      "title": "Marital Status",
                      "maxLength": 4,
                      "description": "Marital status of customer. Values from TMSII View No. 146 - InvvdPtyIndivMaritalStatus",
                      "pattern": "^[0-9]{1,4}$",
                      "example": 1
                    }
                  }
                },
                "journalData": {
                  "type": "string",
                  "description": "This field contain the journal information for the Update Involved Party Details operation and for Pin Reminder if the later operation has been requested."
                },
                "cardAndchequeBookReorderIndicator": {
                  "type": "boolean",
                  "description": "Indicator if user has requested to change name for card and chequebooks."
                },
                "involvedPartyEngagementRoleType": {
                  "type": "string",
                  "description": "This field represents the type of the user who is affected by the name changes or person who is updating the name on behalf o the invovled party.",
                  "enum": [
                    "AffectedParty",
                    "EffectingParty",
                    "RequestingParty for each occurrence",
                    "Observer"
                  ]
                }
              },
              "additionalProperties": false,
              "required": [
                "involvedPartySoftLock",
                "journalData",
                "cardAndchequeBookReorderIndicator",
                "involvedPartyEngagementRoleType"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Name Details of an Involved Party successfully updated.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "Put Name Reorder Tokens Response Schema",
              "type": "object",
              "properties": {
                "moreProcessing": {
                  "type": "string",
                  "maxLength": 27,
                  "description": "This will be populated if there are more records to be updated for name details in continuation with previous call for a particular Involved Party ID.              \n"
                },
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "accounts": {
                  "type": "array",
                  "description": "This will contain the list of account Ids for which card/chequebook has been issued.",
                  "items": {
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 28,
                        "pattern": "^[\\sa-zA-Z\\d\\-\\/]*$"
                      },
                      "message": {
                        "description": "This will contain the message for successful updates only.",
                        "type": "string",
                        "maxLength": 50
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example_1:When Update Involved Party succeeds,cardAndchequeBookReorderIndicator is FALSE": {
                "involvedPartySoftLock": "092349393424"
              },
              "Example_2:When \"Update Involved Party Details\" succeeds, Get Accounts and Role Token Details does not return moreProcessing and Reordering succeeds for returned set of Account(s)": {
                "involvedPartySoftLock": "092349393424",
                "accounts": [
                  {
                    "accountId": "012345678912",
                    "message": "Reordered Tokens successfully"
                  },
                  {
                    "accountId": "012345678913",
                    "message": "Reordered Tokens successfully"
                  }
                ]
              },
              "Example_3:When \"Update Involved Party Details\" succeeds, Get Accounts and Role Token Details returns moreProcessing and Reordering succeeds for returned set of Account(s)": {
                "moreProcessing": "SD08A0123456789000100020005",
                "involvedPartySoftLock": "092349393424",
                "accounts": [
                  {
                    "accountId": "012345678912",
                    "message": "Reordered Tokens successfully"
                  },
                  {
                    "accountId": "012345678913",
                    "message": "Reordered Tokens successfully"
                  }
                ]
              }
            }
          },
          "207": {
            "description": "This response structure contains the successful update when either",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "Put Name Reorder Tokens Response Schema",
              "allOf": [
                {
                  "$ref": "#/definitions/Errors"
                },
                {
                  "type": "object"
                }
              ],
              "description": "Error code and message will be used to communicate failure to consumer. This block provides the ability to create internal error code and message communicating the causes of the error. Validation errors for GET. This is modelled by using an error code for validation failures and providing the detailed errors message in error message field.            \n",
              "type": "object",
              "properties": {
                "moreProcessing": {
                  "type": "string",
                  "maxLength": 27,
                  "description": "This will be populated if there are more records to be updated for name details in continuation with previous call for a particular Involved Party ID.\n"
                },
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "accounts": {
                  "type": "array",
                  "description": "This will contain the list of account Ids for which card/chequebooks is to be reordered.",
                  "items": {
                    "properties": {
                      "accountId": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 28,
                        "pattern": "^[\\sa-zA-Z\\d\\-\\/]*$"
                      },
                      "message": {
                        "description": "This will contain the message for successful updates only.",
                        "type": "string",
                        "maxLength": 50
                      },
                      "modificationRejectionReference": {
                        "type": "string",
                        "description": "A custom error code returned that uniquely identifies the individual soft reject. It means, name is not updated for chequebooks and cards belonging to the account of an Involved Party"
                      },
                      "errors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Error"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example_1:When Update Involved Party Details succeeds, Get Accounts and Role Tokens Details returns moreProcessing, but reordering of cards/chequebook fails for all or some accounts": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.103",
                    "message": "The service could not reorder the tokens for all accounts."
                  }
                ],
                "moreProcessing": "SD08A0123456789000100020005",
                "involvedPartySoftLock": "092349393424",
                "accounts": [
                  {
                    "accountId": "012345678912",
                    "modificationRejectionReference": "987654321012"
                  },
                  {
                    "accountId": "012345678913",
                    "message": "Reordered Tokens successfully"
                  },
                  {
                    "accountId": "012345678914",
                    "errors": [
                      {
                        "code": "NEM.ESB.UTN.404.091",
                        "message": "The accountId not exist."
                      }
                    ]
                  }
                ]
              },
              "Example_2:When Update Involved Party Detals succeeds, but Get Accounts and Role Tokens Details Fails": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.102",
                    "message": "The service could not retrieve the account details."
                  }
                ],
                "involvedPartySoftLock": "092349393424"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "502": {
            "description": "Bad Gateway",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/involved-parties/{involvedPartyId}/ip-details-journal": {
      "put": {
        "summary": "Updates an Involved Party and creates Journal Record",
        "description": "This service takes in data related to an Individual and updates data related to them",
        "operationId": "UpdateInvolvedPartyDetailsJournal",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          },
          {
            "name": "updateInvolvedPartyDetails",
            "in": "body",
            "description": "Updates the details of an involved party and create Journal Record",
            "required": true,
            "schema": {
              "title": "InvolvedParty PUT schema and Journal",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "involvedPartyDetails": {
                  "type": "object",
                  "description": "Personal details of involved party",
                  "properties": {
                    "individual": {
                      "type": "object",
                      "description": "Details of Individual",
                      "properties": {
                        "prefixTitle": {
                          "type": "string",
                          "title": "Prefix title",
                          "maxLength": 4,
                          "description": "This is the customer title. Values dervied from TMSII View No. 247",
                          "pattern": "^[0-9]{1,4}$",
                          "example": "01"
                        },
                        "firstName": {
                          "type": "string",
                          "title": "First Name",
                          "maxLength": 15,
                          "description": "This is the customer forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Charles"
                        },
                        "middleName1": {
                          "type": "string",
                          "title": "Middle Name1",
                          "maxLength": 15,
                          "description": "This is the customer 2nd forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Maximillion"
                        },
                        "middleName2": {
                          "type": "string",
                          "title": "Middle Name2",
                          "maxLength": 15,
                          "description": "This is the customer 3rd forename",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Benjamin"
                        },
                        "lastName": {
                          "type": "string",
                          "title": "Last Name",
                          "maxLength": 30,
                          "description": "This is the customer surname",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,30}$",
                          "example": "Smith"
                        },
                        "initials": {
                          "type": "string",
                          "title": "Intials",
                          "maxLength": 6,
                          "description": "This is the customer name initials",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,6}$",
                          "example": "C.M.B.S."
                        },
                        "suffixTitle": {
                          "type": "string",
                          "title": "Suffix Title",
                          "maxLength": 4,
                          "description": "This is the customers honorific, i.e. BSc. Values dervied from TMSII table No. 48",
                          "pattern": "^[0-9]{1,4}$",
                          "example": "01"
                        },
                        "preferredName": {
                          "type": "string",
                          "title": "Preferred Name",
                          "maxLength": 15,
                          "description": "This is the customers name which they prefer to be addressed by",
                          "pattern": "^[\\sa-zA-Z,_'\\.\\-\\&]{1,15}$",
                          "example": "Benjamin"
                        },
                        "birthDate": {
                          "type": "string",
                          "title": "Birth Date",
                          "description": "This is a customers date of birth: Uses the UTC ISO 8601 Date Date format. For example 2017-01-01",
                          "format": "date",
                          "example": "2017-01-01T00:00:00.000Z"
                        },
                        "maritalStatus": {
                          "type": "string",
                          "title": "Marital Status",
                          "maxLength": 4,
                          "description": "Marital status of customer. Values from TMSII View No. 146 - InvvdPtyIndivMaritalStatus",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "numberOfDependents": {
                          "type": "string",
                          "title": "Number of Dependents",
                          "maxLength": 2,
                          "description": "Count of dependents that a customer has",
                          "pattern": "^[0-9]{1,2}$",
                          "example": 1
                        },
                        "gender": {
                          "type": "string",
                          "title": "Gender",
                          "maxLength": 4,
                          "description": "Gender of Customer. Values from TMSII View No. 140 - Invvd Pty Indiv Gender",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "nationalInsuranceNumber": {
                          "type": "string",
                          "title": "NI Number",
                          "maxLength": 9,
                          "description": "National insurance number of customer",
                          "pattern": "^[A-Z]{2}\\d{6}[A-D]{1}$",
                          "example": "QQ123456C"
                        },
                        "accessibilityNeeds": {
                          "type": "string",
                          "title": "Accessability Needs",
                          "maxLength": 4,
                          "description": "Particular Needs of a customer. Values from TMS Table No. 484 - Particular Needs",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "citizenshipCountryCode": {
                          "type": "array",
                          "title": "Nationality",
                          "description": "National registration of involved party. Values from TMSII View No. 350 - Invvd Pty Indiv Nationality 1",
                          "items": {
                            "type": "string",
                            "maxLength": 4,
                            "pattern": "^[0-9]{0,4}$",
                            "example": 1
                          }
                        },
                        "deceasedStatus": {
                          "type": "string",
                          "title": "Deceased Status",
                          "maxLength": 4,
                          "description": "Death indicator of customer. Values from TMSII Table 46 - Invvd Pty Indiv Death Indicator",
                          "pattern": "^[0-9]{1,4}$",
                          "example": 1
                        },
                        "deceasedDate": {
                          "type": "string",
                          "title": "Deceased Date",
                          "description": "This is a customer date of death: Uses the UTC ISO 8601 Date Date format. For example 2017-01-01",
                          "format": "date",
                          "example": "2017-01-01T00:00:00.000Z"
                        },
                        "countryOfBirth": {
                          "type": "string",
                          "title": "Country Of Birth",
                          "maxLength": 2,
                          "description": "Country of birth of involved party.  Values from CIS table AA020.",
                          "pattern": "^[A-Z0-9]{2}$",
                          "example": "GB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "organisation": {
                      "type": "object",
                      "title": "Organisation",
                      "description": "Details of organisation",
                      "properties": {
                        "establishedDate": {
                          "type": "string",
                          "title": "Established Date",
                          "description": "Establishment date of organisation",
                          "format": "date",
                          "example": "2019-01-01T00:00:00.000Z"
                        },
                        "organisationName": {
                          "type": "string",
                          "title": "Organisation Name",
                          "description": "Name of organisation",
                          "maxLength": 55,
                          "pattern": "^[\\sa-zA-Z0-9\\'-*&!\"#$%()\\/+,-.:;<=>?@^_{}|]{0,55}$",
                          "example": "Nationwide Building Society"
                        }
                      }
                    },
                    "marketingPreferences": {
                      "type": "object",
                      "title": "Marketing Preferences",
                      "description": "GDPR flags for marketing consent",
                      "properties": {
                        "post": {
                          "type": "string",
                          "title": "Post",
                          "description": "Postal preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Mail",
                            "Market By Mail"
                          ],
                          "example": "No Market By Mail"
                        },
                        "telephone": {
                          "type": "string",
                          "title": "Telephone",
                          "description": "Telephone preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Telephone",
                            "Market By Telephone"
                          ],
                          "example": "Market By Telephone"
                        },
                        "email": {
                          "type": "string",
                          "title": "Email",
                          "description": "Email preference of customer",
                          "enum": [
                            "No Preference",
                            "No Market By Email",
                            "Market By Email"
                          ],
                          "example": "Market By Email"
                        },
                        "online": {
                          "type": "string",
                          "title": "Online Indicator",
                          "description": "Online preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt online",
                            "Prompt online"
                          ],
                          "example": "Prompt online"
                        },
                        "faceToFace": {
                          "type": "string",
                          "title": "Face to Face Indicator",
                          "description": "Face to Face preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt Face To Face",
                            "Prompt Face To Face"
                          ],
                          "example": "Not Prompt Face To Face"
                        },
                        "viaPhone": {
                          "type": "string",
                          "title": "via Phone Indicator",
                          "description": "via Phone preference of customer",
                          "enum": [
                            "No Preference",
                            "Not Prompt By Phone",
                            "Prompt By Phone"
                          ],
                          "example": "Prompt By Phone"
                        },
                        "smsService": {
                          "type": "string",
                          "title": "SMS Service",
                          "description": "SMS Service preference of customer",
                          "enum": [
                            "No Preference",
                            "No Service By SMS Service",
                            "Service By SMS Service"
                          ],
                          "example": "No Service By SMS Service"
                        },
                        "smsMarketing": {
                          "type": "string",
                          "title": "SMS Marketing",
                          "description": "SMS Marketing preference of customer",
                          "enum": [
                            "No Preference",
                            "No Service By SMS Marketing",
                            "Service By SMS Marketing"
                          ],
                          "example": "No Service By SMS Marketing"
                        }
                      }
                    },
                    "membershipStatus": {
                      "type": "object",
                      "title": "MembershipStatus",
                      "description": "Membership status of Involved Party",
                      "properties": {
                        "membershipStatusCode": {
                          "type": "string",
                          "title": "Membership Status Code",
                          "description": "Invovled Party membership status value. Please refre TMS Table No. 644 â IndividualMembershipCode\n",
                          "maxLength": 1,
                          "pattern": "^[\\sa-zA-Z0-9]{1}$",
                          "example": "F"
                        },
                        "membershipVoluntaryIndicator": {
                          "type": "boolean",
                          "title": "Membership Voluntary Indicator",
                          "description": "Voluntary Indicator for membership . True â Voluntary Indicator has been set, False -  Otherwise\n",
                          "example": true
                        },
                        "membershipOverrideIndicator": {
                          "type": "string",
                          "title": "Membership Override Indicator",
                          "description": "Override Indicator for membership.Enumerations defined as All products (including Portman), and NBS products only\n",
                          "enum": [
                            "All Products Including Portman",
                            "NBS Products only"
                          ],
                          "example": "NBS Products only"
                        }
                      }
                    },
                    "doNotMergeIndicator": {
                      "type": "string",
                      "title": "Merge Indicator",
                      "description": "Indicates if record should be merged with similar record or not",
                      "enum": [
                        "Do Not Merge",
                        "Merge"
                      ],
                      "example": "Do Not Merge"
                    },
                    "tssRegisteredInd": {
                      "type": "string",
                      "title": "TSS Registered Indicator",
                      "description": "Telephone Banking Registration Status. TSS (Telephone Self Service)",
                      "enum": [
                        "Registered For TSS",
                        "De-registered From TSS",
                        "Never Registered For TSS",
                        "Blocked From TSS"
                      ],
                      "example": "Registered For TSS"
                    },
                    "iBRegStatus": {
                      "type": "string",
                      "title": "IB Registration Status",
                      "description": "Internet Bank Registration Status",
                      "enum": [
                        "Registered For IB",
                        "De-registered From IB",
                        "Never Registered For IB",
                        "Blocked From IB"
                      ],
                      "example": "Never Registered For IB"
                    },
                    "idCheckStatusCode": {
                      "type": "string",
                      "title": "Identification Check Status Code",
                      "description": "Identification Check Status Code. Values from TMSII Table No. 508 - IdentificationCheckStatusCode",
                      "maxLength": 4,
                      "pattern": "^[0-9]{1,4}$",
                      "example": "00001"
                    },
                    "contactPreferences": {
                      "description": "Holds the list of contact preferences of an involved party (individual or organisation).\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "contactPointSoftLock": {
                            "type": "string",
                            "title": "CP SoftLock",
                            "description": "This is reference to contact point within CIS. It is combination of contact point reference number and update level. Populate this if user has  searched/selected existing contact point for the customer.  This field must always be sourced from a previous CIS response Used only to set existing address as the correspondence address",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                            "maxLength": 12,
                            "example": "092349393424"
                          },
                          "contactPointEndDate": {
                            "type": "string",
                            "title": "CP End Date",
                            "description": "contact Point Role end Date. After this date contact point will not be effective.\n",
                            "format": "date",
                            "example": "CCYY-MM-DD"
                          },
                          "contactPointStartDate": {
                            "type": "string",
                            "title": "CP Start Date",
                            "description": "contact Point Role Start Date on which contact point will be effective\n",
                            "format": "date",
                            "example": "CCYY-MM-DD"
                          },
                          "contactPointUsage": {
                            "type": "string",
                            "maxLength": 4,
                            "description": "Usage of contact point a.k.a Communication Point Role Type. e.g Correspondence Address, Residential Address etc. Please refer to TMS view 250 for code/values.This field must be presented for all Communication Points updates. \n",
                            "pattern": "^[0-9]{1,4}$",
                            "example": "0001"
                          },
                          "contactPointTelephoneNumber": {
                            "type": "object",
                            "title": "Telephone Number",
                            "description": "Details related to a Fixedline or Mobile number. For GET all fields are available, however for PUT/POST a consumer can only populate localNumber, areaCode and extensionNumber,countryPhoneCode If exists. For UK Phone numbers, the Phone number need to be passed into two part assigning into areaCode and localNumber.\n",
                            "properties": {
                              "areaCode": {
                                "type": "string",
                                "maxLength": 10,
                                "readOnly": true,
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\+]*$",
                                "example": "0208"
                              },
                              "countryPhoneCode": {
                                "type": "string",
                                "maxLength": 2,
                                "pattern": "^[\\sa-zA-Z]{1,2}$",
                                "example": "GB"
                              },
                              "localNumber": {
                                "type": "string",
                                "maxLength": 20,
                                "pattern": "^[0-9]{1,20}$",
                                "example": "9975521"
                              },
                              "extensionNumber": {
                                "type": "string",
                                "maxLength": 6,
                                "readOnly": true,
                                "pattern": "^[0-9]{1,6}$",
                                "example": "120048"
                              }
                            }
                          },
                          "contactPointEmailAddress": {
                            "type": "string",
                            "title": "Email",
                            "maxLength": 100,
                            "description": "Email address aka Electronic Address\n",
                            "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                            "example": "Perter@address.co.uk"
                          },
                          "contactPointRole": {
                            "type": "object",
                            "title": "Contact Point Role",
                            "description": "Contact Point Role Details",
                            "properties": {
                              "contactPointRoleSoftLock": {
                                "type": "string",
                                "title": "CP Role SoftLock",
                                "description": "contact point role softlock is the reference to conatc point role. contact point role links involved party with contact point.  This field must always be sourced from a previous CIS response",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                                "example": "0923493934242345864137808425673452",
                                "maxLength": 34
                              },
                              "contactPointRoleAddressPrefix": {
                                "type": "string",
                                "title": "Communication Point Role Address Prefix",
                                "maxLength": 78,
                                "description": "Address Prefix Contains info on items such as POA\n",
                                "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,78}$"
                              },
                              "contactPointUnavailableReason": {
                                "type": "string",
                                "title": "Role Unavailability Reason",
                                "maxLength": 4,
                                "description": "Reason for unavailability of contact point. e.g. No Trace, No Mail etc. Please refer to TMS Table 18 for code/values\n",
                                "pattern": "^[0-9]{1,4}$",
                                "example": "0001"
                              },
                              "contactPointMailingAddressIndicator": {
                                "type": "boolean",
                                "title": "Mailing Address Indicator",
                                "description": "Indicates if contact point is a mailing address. Set to true if contact point is preferred mailing address.\n",
                                "default": false
                              }
                            }
                          }
                        }
                      }
                    },
                    "taxDetails": {
                      "description": "A list of taxation and FATCA data",
                      "type": "object",
                      "properties": {
                        "selfCertDeclaration": {
                          "type": "string",
                          "title": "Self Cert Declaration",
                          "description": "AKA self-dicationDeclaration field.   B=Customer required to declare D=Customer has declaration.  Meaning of value can be taken from TMS 1153, SelfCertifot answered N=Non UK citizen and/or pay tax outside of UK X=Not Required Y=Only a UK citizen and only resident in the UK for tax purposes Space=Individual with no in scope products\n",
                          "enum": [
                            "B",
                            "D",
                            "N",
                            "X",
                            "Y"
                          ],
                          "example": "B"
                        },
                        "taxRecords": {
                          "description": "List of tax records",
                          "type": "array",
                          "items": {
                            "properties": {
                              "selfCertDate": {
                                "type": "string",
                                "title": "Self Cert Date",
                                "description": "As defined by full-date - RFC3339 YYYY-MM-DD\n",
                                "format": "date",
                                "example": "YYYY-MM-DD"
                              },
                              "countryCode": {
                                "type": "string",
                                "title": "Country Code",
                                "maxLength": 2,
                                "pattern": "^[\\sa-zA-Z]{1,2}$",
                                "example": "GB"
                              },
                              "taxType": {
                                "type": "string",
                                "title": "Tax type",
                                "description": "Tax type. Possible values R = Residential C = Citizenship D = Not Asked\n",
                                "enum": [
                                  "R",
                                  "C",
                                  "D"
                                ]
                              },
                              "taxIdNumber": {
                                "type": "string",
                                "title": "Tax ID Number",
                                "maxLength": 20,
                                "description": "Tax Id number",
                                "pattern": "^[\\sa-zA-Z0-9-]{1,20}$"
                              },
                              "declineReasonCode": {
                                "type": "string",
                                "maxLength": 4,
                                "description": "Reason code for non-capture of self certification\ndeclaration \n",
                                "pattern": "^\\d{1,4}$"
                              }
                            },
                            "required": [
                              "taxType"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": false
                },
                "journalData": {
                  "type": "string",
                  "description": "Object containing all the mandatory Journalling fields"
                }
              },
              "additionalProperties": false,
              "required": [
                "involvedPartySoftLock",
                "journalData"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InvolvedParty Details successfully updated.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty PUT response",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "involvedPartySoftLock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "taxRecordSoftLocks": {
                  "description": "List of tax record SoftLocks in the same order as input",
                  "type": "array",
                  "items": {
                    "properties": {
                      "taxRecordSoftLock": {
                        "type": "string",
                        "description": "SoftLock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,23}$",
                        "example": "09234939342423458641374",
                        "maxLength": 23
                      }
                    }
                  }
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": " 1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 - CommunicationPointRoleType",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "moreProcessing": {
                        "description": "This represents if there are further agreements for which the address needs to change. Format: aaaabbbbbbbbbb (14) where: aaaa is the agreement role type (4) bbbbbbbbbb is the agreement reference number (10)",
                        "type": "string",
                        "maxLength": 14,
                        "pattern": "^[\\sa-zA-Z]{1,14}$"
                      },
                      "numberOfAccounts": {
                        "description": "Number of accounts that have passed Member Profile\neligibility during Standard Change of Address and a move to a\nnew addr will be attempted.\n",
                        "type": "string",
                        "maxLength": 3
                      },
                      "moveAccountStatus": {
                        "description": "This element represents the list of accounts/agreements which\nhave been successfully moved and accounts that have failed\nmember accounts eligibility and therefore can not be moved.\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountReference": {
                              "description": "The external account number, account number the\ncustomer knows.\n",
                              "type": "string"
                            },
                            "partialCCPAN": {
                              "title": "Partial Credit Card PAN\n",
                              "type": "string",
                              "description": "This is the obfuscated value of the credit card PAN  \n"
                            },
                            "accountHostLocation": {
                              "description": "The location or system application ID. Identifies the\nsource account system. Values derived from TMSII View\nNo. 257 - Agreement Element Location\n",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountSubTypeCode": {
                              "description": "Product code",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountLifecycleStatus": {
                              "description": "Agreement status. Values derived from TMSII Table No. 7.",
                              "type": "string",
                              "maxLength": 4
                            },
                            "reasonCode": {
                              "description": "Reason rejected or updated. Following can be set of some values -\n  0000- Agreement Amended Successfully\n  0001- Role not qualifying for STCOA\n  0002- Address prefix found - STCOA NOT Allowed\n  0003-Not  primary credit card holder -STCOA not allowed\n",
                              "type": "string",
                              "maxLength": 4,
                              "example": "0000"
                            },
                            "reasonDescription": {
                              "description": "Reason reject or updated description.",
                              "type": "string",
                              "maxLength": 65
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example of Address Update - 1 (Accounts meet the Member Profile Eligibility) - Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessing": "ABCD0123456789",
                    "numberOfRows": 20,
                    "moveAccountStatus": [
                      {
                        "externalAccountNumber": "1234567890",
                        "elementReference": "TestReference",
                        "applicationId": 7,
                        "productType": "string",
                        "productStatus": 9,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ]
                  }
                ]
              },
              "Example of an Address Update - 2 (Accounts does not meet the Member Profile Eligibility)- Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessing": "ABCD0123456789",
                    "numberOfRows": 3,
                    "moveAccountStatus": []
                  }
                ]
              },
              "Example of Address Update - 3 (Number of Accounts to be moved for an address greater than numberOfRows) - 3 - Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessing": "",
                    "numberOfRows": 1,
                    "moveAccountStatus": [
                      {
                        "externalAccountNumber": "1234567890",
                        "elementReference": "TestReference",
                        "applicationId": 7,
                        "productType": "string",
                        "productStatus": 9,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ]
                  }
                ]
              },
              "Example of Tax details creation - Success": {
                "involvedPartySoftLock": "092349393424",
                "taxRecordSoftLocks": {
                  "taxRecordSoftLock": "09234939342423458641374"
                }
              }
            }
          },
          "207": {
            "description": "InvolvedParty Details updated patially",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty PUT response",
              "allOf": [
                {
                  "$ref": "#/definitions/Errors"
                },
                {
                  "type": "object"
                }
              ],
              "description": "Error code and message will be used to communicate failure to consumer. This block provides the ability to create internal error code and message communicating the causes of the error. Validation errors for GET, PUT, PATCH and POST requests will need a field breakdown. This is best modelled by using an error code for validation failures and providing the detailed errors message in error message field.\n",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": " 1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 - CommunicationPointRoleType",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "rowErrorText": {
                        "type": "string",
                        "maxLength": 50,
                        "description": "Error Text at each communication point level, represents the error description for each Communication Point row",
                        "example": "Communication point is not valid"
                      },
                      "rowErrorCategory": {
                        "type": "string",
                        "maxLength": 30,
                        "description": "Error Category at each communication point level",
                        "example": "validation error"
                      },
                      "rowErrorNumber": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Error number at each communication point level",
                        "example": "01"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example of Partial Sucess 1 - When tried to update both CP role fields and Sequence number in sequnetial calls. The Sequence number update failed and CP role details are successfully updated": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.001",
                    "message": "Failed to update mailing address indicator (sequence number)",
                    "logErrorId": "c9cd35a4-8cf8-4b9c-90e5-299aea597024"
                  }
                ],
                "contactPreferences": {
                  "contactPointRoleSoftLock": "0923493934242345864137808425673452"
                }
              },
              "Example of Partial Sucess 2 - Any one contact preferences instance updated with error details while creating Communication Point": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "16"
                  },
                  {
                    "rowErrorText": "Communication point is not valid",
                    "rowErrorCategory": "Validation Error",
                    "rowErrorNumber": "02"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "504": {
            "description": "Gateway Timeout",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    },
    "/involved-parties/{involvedPartyId}/address-engagement-action": {
      "put": {
        "summary": "Update Correspondence address to all agreements for a Single Involved Party or Adds a new Involved Party address.",
        "description": "This service takes in Address details which need to be add/updated of an Involved Party.",
        "operationId": "PutAddressEngagementAction",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "X-Additional-Info",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This object holds information in addition to the other header fields below. The strings should be populated in a name/value pair format as follows; [\"ProcessID 123456789\", \"ParentProcessID 66213\"]. Name value pair is separated by a blank space character. Name must not contain a space but the value may contain. The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the name and  the second for the value. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Channel",
            "type": "string",
            "minLength": 2,
            "maxLength": 25,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessTransactionCommunicationChannelCode' for the  list of possible values. Sample Values include POST OFFICE INTERNET MOBILE\n"
          },
          {
            "in": "header",
            "name": "X-Channel-Alternate-Id",
            "type": "array",
            "items": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$",
              "minLength": 3,
              "maxLength": 121
            },
            "required": false,
            "collectionFormat": "csv",
            "description": "This string holds the channel alternate identifiers. It contains sub-strings that should be populated in a name/value pair format as follows. 'name value' for example [\"MACHINEID 123.123.123.123\", \"CUSTOMERID 1234567891\"]. The following values are allowed for name CASHIERID CUSTOMERID EMPLOYEEID MACHINEID TERMINALID USERID FUNCTIONALUNITID The values within the identifier should meet the criteria below\n  string max length of 121 and pattern of\n  ^[a-zA-Z0-9,_\\'\\.\\-]+[ ][ a-zA-Z0-9,_\\'\\.\\-]+$\nThis pattern means 2 strings of sepparated by 1 delimiting space character. The first string is for the type and  the second for the identifier. The second string accepts spaces, but the first don't.\n"
          },
          {
            "in": "header",
            "name": "X-Virtual-Environment",
            "type": "string",
            "minLength": 1,
            "maxLength": 20,
            "required": true,
            "pattern": "^[A-Z0-9,\\.\\-]*$",
            "description": "Where a project shares environments with other projects, this field is used to create a\n\"virtual environment\". Consumers can pass this such that the service gateway routes to\na project specific version.  The main purpose of this field is to aid testing and\nproduction proving.  Once the service is live and proven, it typically no longer serves\na purpose.\nExample value \"EM2DAY2\".\n"
          },
          {
            "in": "header",
            "name": "X-Schema-Version",
            "type": "string",
            "enum": [
              3,
              3.1,
              3.2,
              3.3
            ],
            "required": true,
            "description": "This is a way for the consumer to communicate what version of the specification it has. For example a consumer may still operate using v1.0 while the service is at v1.1 (at which point \"v1.1\" will be added to the enumeration above). This field is used for two purposes\n  - it will allow the service to ensure the consumer receives a\n  compatible response\n  - we can deploy a new minor version alongside an existing minor\n  version, and route\n  the service to either based on this field (and other info). Based\n  on testing proving the service will ultimately switch to the \n  final version.\n"
          },
          {
            "in": "header",
            "name": "X-Journey-Id",
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
            "required": false,
            "description": "A unique identifier populated by the consumer. It follows the UUID pattern, for example 123e4567-e89b-12d3-a456-426655440000\n"
          },
          {
            "in": "header",
            "name": "X-Source-System-Id",
            "type": "string",
            "minLength": 1,
            "maxLength": 60,
            "required": true,
            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]*$",
            "description": "Please refer TMS domain 'BusinessSystemID' for the  list of \npossible values. Sample\nValues include\nDISCOVERY\nBASE24\nCIS\n"
          },
          {
            "in": "header",
            "name": "X-Create-Date-Time",
            "type": "string",
            "format": "date-time",
            "required": true,
            "description": "Time stamp associated with creation of the request message utilisting the UTC ISO 8601 Date Time format.  \"For example 2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
          },
          {
            "in": "header",
            "name": "X-IP-Address",
            "type": "string",
            "minLength": 7,
            "maxLength": 39,
            "required": false,
            "pattern": "^[a-fA-F0-9:\\.]*$",
            "description": "The IPv4/IPv6 address of the caller."
          },
          {
            "in": "path",
            "name": "involvedPartyId",
            "type": "string",
            "required": true,
            "minLength": 1,
            "maxLength": 10,
            "pattern": "^\\d{1,10}$",
            "description": "Specifies the unique Identifier used to identify an InvolvedParty\n"
          },
          {
            "name": "PutAddressEngagementAction",
            "in": "body",
            "description": "This service will update a Correspondence address to all agreements for a Single Member or Adds a new Member address.",
            "required": true,
            "schema": {
              "title": "InvolvedParty PUT schema",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Involved Party SoftLock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response.",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "moreProcessingSCOA": {
                  "description": "This represents if there are further agreements for which the address needs to change, and this is applicable to Standard Change of Address (SCOA).",
                  "type": "string",
                  "maxLength": 14,
                  "pattern": "^[\\sa-zA-Z0-9]{1,14}$"
                },
                "contactPreferences": {
                  "description": "Holds the list of addresses of an involved party (individual or organisation).\n",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "accountsForAddressChange": {
                        "description": "The list of accounts whose correspondance address will be changed.\nAt a time up to a maximum of 50 acounts can be processed.\nThe consumer is expected to invoke this service multiple times when more than 50 accounts need to be processed sending upto a maximum of 50 accounts per invocation.\nNote - This input is specific to Exception Change of Address.\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountSoftLock": {
                              "type": "string",
                              "title": "Account SoftLock",
                              "maxLength": 12,
                              "description": "The Agreement Blob as defined by CIS.\n"
                            }
                          }
                        }
                      },
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Contact point soft lock used to make sure update is against to existing latest record, must retain and passed for updates.",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointStartDate": {
                        "description": "Communication Point Role Start Date",
                        "type": "string",
                        "format": "date",
                        "example": "CCYY-MM-DD"
                      },
                      "contactPointEndDate": {
                        "type": "string",
                        "title": "CP role End Date",
                        "description": "contact Point Role end Date. After this date contact point will not be effective\n",
                        "format": "date",
                        "example": "CCYY-MM-DD"
                      },
                      "contactPointOccupancyStatusCode": {
                        "type": "string",
                        "title": "Role Occupancy Status Code",
                        "maxLength": 4,
                        "description": "Role Occupancy Status Code.Please refer to TMS Table 194 for values\n",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Communication Point Role Type.Please refer to TMS view 250 for values \n",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "standaloneAddressIndicator": {
                        "type": "boolean",
                        "title": "Standalone Address Indicator",
                        "description": "Standalone or hanging address ( The postal address of an Involved Party which is NOT associated to any agreements )  True â Standalone address set, False -  Oherwise\n",
                        "example": true
                      },
                      "contactPointManualEntryReasonCode": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Reason for not selecting address from search and entering address manually. Please refer TMSII Table No. 21 - Comcn Pnt Validity Reason for code/ values",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "contactPointAddressComponent": {
                        "description": "Contains an address types and address information populated\nby data available. Consumer should check to see if BFPO is\npopulate to find type of address. If BFPO is given use fields\naddressLine1 and and below. Else use other fields except in\nthe case of foreign addresses, where consumer would also use\naddressLine1 to addressLine3 in addition to the country\n",
                        "type": "object",
                        "properties": {
                          "unitNumber": {
                            "description": "Sub Building Name",
                            "type": "string",
                            "example": "23A",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-]{1,30}$"
                          },
                          "buildingNumber": {
                            "description": "Number of building",
                            "type": "string",
                            "example": "34",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-]{1,10}$"
                          },
                          "buildingName": {
                            "description": "Name of building",
                            "type": "string",
                            "example": "The Downs",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\/\\.\\-\\&]{1,35}$"
                          },
                          "city": {
                            "description": "Postal Town Name",
                            "type": "string",
                            "example": "Swindon",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,30}$"
                          },
                          "thoroughfareName": {
                            "description": "Thorough fare Name",
                            "type": "string",
                            "example": "Hill Street",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$"
                          },
                          "dependentThoroughfareName": {
                            "description": "Sub Thorough fare Name",
                            "type": "string",
                            "example": "Pyre Close",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$"
                          },
                          "dependentLocality": {
                            "description": "Locality Name",
                            "type": "string",
                            "example": "Bethnal Green",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$"
                          },
                          "doubleDependentLocality": {
                            "description": "Sub Locality Name",
                            "type": "string",
                            "example": "Whitehall",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$"
                          },
                          "postalCode": {
                            "description": "This includes Inward and Outward post codes, both",
                            "type": "string",
                            "example": "SWR 423",
                            "pattern": "^[\\sa-zA-Z0-9-]{0,8}$"
                          },
                          "countyName": {
                            "type": "string",
                            "title": "County Name",
                            "description": "Name of county",
                            "pattern": "^[\\sa-zA-Z]{1,30}$",
                            "example": "West Midlands"
                          },
                          "country": {
                            "type": "string",
                            "example": "GB",
                            "pattern": "^[\\sa-zA-Z]{1,2}$"
                          },
                          "addressLine1": {
                            "type": "string",
                            "title": "Address Line 1",
                            "maxLength": 35,
                            "description": "First line of address or in the case of BFPO this will be unit/regiment",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                            "example": "Unit 6, Welsh Guards"
                          },
                          "addressLine2": {
                            "type": "string",
                            "title": "Address Line 2",
                            "maxLength": 35,
                            "description": "Second line of address or in the case of BFPO this will be BFPO Number",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                            "example": "BFPO 16"
                          },
                          "addressLine3": {
                            "type": "string",
                            "title": "Address Line 3",
                            "maxLength": 35,
                            "description": "Third line of address or in the case of BFPO this will be set as BFPO",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                            "example": "BFPO"
                          },
                          "addressLine4": {
                            "type": "string",
                            "title": "Address Line 4",
                            "maxLength": 35,
                            "description": "Fourth line of address or in the case of BFPO this will be Staff number, rank and name",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                            "example": "987654321 Col. Susan Powell"
                          },
                          "addressLine5": {
                            "type": "string",
                            "title": "Address Line 5",
                            "maxLength": 35,
                            "description": "Fifth line of address or in the case of BFPO this will be Operation/location name (optional)",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,35}$",
                            "example": "Operation Catflap"
                          },
                          "pafStatus": {
                            "type": "string",
                            "title": "PAF Status",
                            "description": "Values expressing the PAF state of an address.The values\nare PAF_Address-Address on PAF,PAF_Overriden-Address on\nPAF but overridden,Non_PAF_Address-Address not on PAF\n",
                            "enum": [
                              "PAF_Address",
                              "PAF_Overriden",
                              "Non_PAF_Address"
                            ],
                            "pattern": "^[\\sa-zA-Z0-9-_]{1,15}$"
                          },
                          "deliveryPointSuffix": {
                            "type": "string",
                            "description": "The DPS is a two character identifier, e.g. 2B which when\nadded to the Postcode gives a unique delivery point\nidentifier to a live delivery point. Once the delivery\npoint is deleted from PAF the DPS may be reused. The DPS\nfor a Large User is always '1A' as each Large User has\nits own Postcode.\n",
                            "maxLength": 2,
                            "example": "9Z",
                            "pattern": "^[\\sa-zA-Z0-9-]{2}$"
                          },
                          "poBoxNumber": {
                            "type": "string",
                            "title": "PO Box Number",
                            "maxLength": 6,
                            "description": "po box number of postal address",
                            "pattern": "^[0-9]{0,6}$",
                            "example": 146
                          }
                        },
                        "additionalProperties": false
                      },
                      "contactPointRole": {
                        "type": "object",
                        "title": "Contact Point Role",
                        "description": "Contact Point Role Details",
                        "properties": {
                          "contactPointRoleSoftLock": {
                            "type": "string",
                            "title": "CP Role SoftLock",
                            "description": "contact point role softlock is the reference to conatc point role. contact point role links involved party with contact point.  This field must always be sourced from a previous CIS response",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                            "example": "0923493934242345864137808425673452",
                            "maxLength": 34
                          },
                          "contactPointRoleAddressPrefix": {
                            "type": "string",
                            "title": "Communication Point Role Address Prefix",
                            "maxLength": 78,
                            "description": "Address Prefix Contains info on items such as POA\n",
                            "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-\\&]{1,78}$"
                          },
                          "contactPointUnavailableReason": {
                            "type": "string",
                            "title": "Role Unavailability Reason",
                            "maxLength": 4,
                            "description": "Reason for unavailability of contact point. e.g. No Trace, No Mail etc. Please refer to TMS Table 18 for code/values\n",
                            "pattern": "^[0-9]{1,4}$",
                            "example": "0001"
                          },
                          "contactPointMailingAddressIndicator": {
                            "type": "boolean",
                            "title": "Mailing Address Indicator",
                            "description": "Indicates if contact point is a mailing address. Set to true if contact point is preferred mailing address.\n",
                            "default": false
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "journalData": {
                  "type": "string",
                  "description": "This field contain the journal information for the Update Involved Party Details operation and for Pin Reminder if the later operation has been requested."
                }
              },
              "additionalProperties": false,
              "required": [
                "journalData"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "InvolvedParty Address successfully updated/Added.",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty Address PUT response",
              "type": "object",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Involved Party SoftLock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response.",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Involved Party Soft Lock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Role Soft lock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": "1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 - CommunicationPointRoleType",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "moreProcessingSCOA": {
                        "description": "This represents if there are further agreements for which the address needs to change. Format: aaaabbbbbbbbbb (14) where: aaaa is the agreement role type (4) bbbbbbbbbb is the agreement reference number (10)",
                        "type": "string",
                        "maxLength": 14,
                        "pattern": "^[\\sa-zA-Z0-9]{1,14}$"
                      },
                      "numberOfAccounts": {
                        "description": "Number of accounts that have passed Member Profile eligibility during Standard Change of Address and a move to a new addr will be attempted.",
                        "type": "string",
                        "maxLength": 3
                      },
                      "moveAccountStatus": {
                        "description": "This element represents the list of accounts/agreements which have been successfully moved and accounts that can not be moved. Note - This object will be returned for Standard Change of Address (STCOA) or Exception Change of Address (COA-E)",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountReference": {
                              "description": "The external account number, account number the customer\nknows.\n",
                              "type": "string"
                            },
                            "partialCCPAN": {
                              "title": "Partial Credit Card PAN\n",
                              "type": "string",
                              "description": "This is the obfuscated value of the credit card PAN  \n"
                            },
                            "accountHostLocation": {
                              "description": "The location or system application ID. Identifies the source account system. Values derived from TMSII View No. 257 - Agreement Element Location.",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountSubTypeCode": {
                              "description": "Product code",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountLifecycleStatus": {
                              "description": "Agreement status. Values derived from TMSII Table No. 7 ",
                              "type": "string",
                              "maxLength": 4
                            },
                            "reasonCode": {
                              "description": "Reason for account updated or not. Following can be set of some values -\n  0 - Agreement Amended Successfully\nNote - The following reason codes and descriptions are specific to Standard Change Of Address\n  1 - Role not qualifying for STCOA\n  2 - Address prefix found - STCOA NOT Allowed\n  3 - Not  primary credit card holder -STCOA not allowed\nNote - The following reason codes and descriptions are specific to Exception Change of Address\n  4 - Account not found\n  5 - Not an NBS account\n  6 - Account is closed\n  7 - Agreement Role not found\n  8 - No open Agreement Role found\n  9 - Not  primary credit card holder â ECOA not allowed\n",
                              "type": "string",
                              "maxLength": 4,
                              "example": "0000"
                            },
                            "reasonDescription": {
                              "description": "Reason reject or updated description.",
                              "type": "string",
                              "maxLength": 65
                            }
                          },
                          "additionalProperties": false
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example of Address Update - 1 (Accounts meet the Member Profile Eligibility) - Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessingSCOA": "ABCD0123456789",
                    "numberOfAccounts": 50,
                    "moveAccountStatus": [
                      {
                        "accountReference": "1234567890",
                        "partialCCPAN": "CC12345678901",
                        "applicationId": 7,
                        "accountSubTypeCode": "string",
                        "accountLifecycleStatus": 9,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ]
                  }
                ]
              },
              "Example of an Address Update - 2 (Accounts does not meet the Member Profile Eligibility)- Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessingSCOA": "ABCD0123456789",
                    "numberOfAccounts": 3,
                    "moveAccountStatus": []
                  }
                ]
              },
              "Example of Address Update - 3 (Number of Accounts to be moved for an address greater than numberOfAccounts) - 3 - Success": {
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessingSCOA": "",
                    "numberOfAccounts": 1,
                    "moveAccountStatus": [
                      {
                        "accountReference": "1234567890",
                        "partialCCPAN": "CC12345678901",
                        "accountHostLocation": 7,
                        "accountSubTypeCode": "string",
                        "accountLifecycleStatus": 9,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "207": {
            "description": "InvolvedParty Address Details updated partially",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "title": "InvolvedParty Address PUT response",
              "allOf": [
                {
                  "$ref": "#/definitions/Errors"
                },
                {
                  "type": "object"
                }
              ],
              "description": "Error code and message will be used to communicate failure to consumer. This block provides the ability to create internal error code and message communicating the causes of the error. Validation errors for GET, PUT, PATCH and POST requests will need a field breakdown. This is best modelled by using an error code for validation failures and providing the detailed errors message in error message field.\n",
              "properties": {
                "involvedPartySoftLock": {
                  "type": "string",
                  "description": "Involved Party SoftLock is a reference number to identify the record for an involved party. This field must always be sourced from a previous CIS response.",
                  "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                  "example": "092349393424",
                  "maxLength": 12
                },
                "contactPreferences": {
                  "description": "list of contact points",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contactPointSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,12}$",
                        "example": "092349393424",
                        "maxLength": 12
                      },
                      "contactPointRoleSoftLock": {
                        "type": "string",
                        "description": "Softlock used to make sure update is against latest record, must retain and passed for updates",
                        "pattern": "^[\\sa-zA-Z0-9,_'\\.\\-]{1,34}$",
                        "example": "0923493934242345864137808425673452",
                        "maxLength": 34
                      },
                      "contactPointType": {
                        "type": "string",
                        "maxLength": 1,
                        "description": "IF  involvedPartyDetails/contactPreferences /contactPointAddressComponent is set (OR) involvedPartyDetails/contactPreferences /contactPointSoftLock  is Set THEN set â1â ELSE IF involvedPartyDetails/contactPreferences/contactPointTelephoneNumber OR involvedPartyDetails/contactPreferences /contactPointEmailAddress is set THEN set â2â\n",
                        "pattern": "^[0-9]{1,1}$",
                        "example": "1"
                      },
                      "contactPointUsage": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 4,
                        "description": "Values derived from TMSII View No. 250 - CommunicationPointRoleType'",
                        "example": "01",
                        "pattern": "^[0-9]{1,4}$"
                      },
                      "moreProcessingSCOA": {
                        "description": "this represents if there are further agreements for which the address needs to change.  Example -  aaaabbbbbbbbbb (14) where aaaa is the agreement role type (4) bbbbbbbbbb is the agreement reference number (10)",
                        "type": "string",
                        "maxLength": 14,
                        "pattern": "^[\\sa-zA-Z0-9]{1,14}$"
                      },
                      "numberOfAccounts": {
                        "description": "Number of accounts that have passed Member Profile eligibility during Standard Change of Address and a move to a new addr will be attempted.",
                        "type": "string",
                        "maxLength": 3
                      },
                      "moveAccountStatus": {
                        "description": "This element represents the list of accounts/agreements which have been successfully moved and accounts that have failed member accounts eligibility and therefore can not be moved.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "accountReference": {
                              "description": "The external account number, account number the customer\nknows.\n",
                              "type": "string"
                            },
                            "partialCCPAN": {
                              "title": "Partial Credit Card PAN\n",
                              "type": "string",
                              "description": "This is the obfuscated value of the credit card PAN  \n"
                            },
                            "accountHostLocation": {
                              "description": "The location or system application ID. Identifies the source account system. Values derived from TMSII View No. 257 - Agreement Element Location.",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountSubTypeCode": {
                              "description": "Product code",
                              "type": "string",
                              "maxLength": 4
                            },
                            "accountLifecycleStatus": {
                              "description": "Agreement status. Values derived from TMSII Table No. 7",
                              "type": "string",
                              "maxLength": 4
                            },
                            "reasonCode": {
                              "description": "Reason for account updated or not. Following can be set of some values -\n  0 - Agreement Amended Successfully\nNote - The following reason codes and descriptions are specific to Standard Change Of Address\n  1 - Role not qualifying for STCOA\n  2 - Address prefix found - STCOA NOT Allowed\n  3 - Not  primary credit card holder -STCOA not allowed\nNote - The following reason codes and descriptions are specific to Exception Change of Address\n  4 - Account not found\n  5 - Not an NBS account\n  6 - Account is closed\n  7 - Agreement Role not found\n  8 - No open Agreement Role found\n  9 - Not  primary credit card holder â ECOA not allowed                \n",
                              "type": "string",
                              "maxLength": 4,
                              "example": "0000"
                            },
                            "reasonDescription": {
                              "description": "Reason reject or updated description.",
                              "type": "string",
                              "maxLength": 65
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "rowErrorText": {
                        "type": "string",
                        "maxLength": 50,
                        "description": "Error Text at each communication point level, represents the error description for each Communication Point row",
                        "example": "Communication point is not valid"
                      },
                      "rowErrorCategory": {
                        "type": "string",
                        "maxLength": 30,
                        "description": "Error Category at each communication point level",
                        "example": "validation error"
                      },
                      "rowErrorNumber": {
                        "type": "string",
                        "maxLength": 4,
                        "description": "Error number at each communication point level",
                        "example": "01"
                      }
                    },
                    "additionalProperties": false
                  }
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "Example of Partial Sucess 1 - Change of Address successful but not able to create an engagement action on Portrait system": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.101",
                    "message": "Partial Success - The service could not put the  message in customer event queue"
                  }
                ],
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673452",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673452",
                    "contactPointUsage": "1",
                    "moreProcessingSCOA": null,
                    "numberOfAccounts": "1",
                    "moveAccountStatus": [
                      {
                        "accountReference": 2435678901,
                        "accountHostLocation": 1,
                        "accountSubTypeCode": 123,
                        "accountLifecycleStatus": 1,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ],
                    "rowErrorText": null,
                    "rowErrorCategory": null,
                    "rowErrorNumber": null
                  }
                ]
              },
              "Example of Partial Sucess 2 - Change of address successful. Not able to create a jornal entry": {
                "errors": [
                  {
                    "code": "NEM.ESB.IPM.207.104",
                    "message": "Partial Success - Journalling has failed"
                  }
                ],
                "involvedPartySoftLock": "092349393424",
                "contactPreferences": [
                  {
                    "contactPointSoftLock": "0923493934242345864137808425673451",
                    "contactPointRoleSoftLock": "0923493934242345864137808425673451",
                    "contactPointUsage": "1",
                    "numberOfAccounts": "2",
                    "moveAccountStatus": [
                      {
                        "accountReference": 1234567891,
                        "accountHostLocation": 81,
                        "accountSubTypeCode": 123,
                        "accountLifecycleStatus": 1,
                        "reasonCode": 0,
                        "reasonDescription": "Agreement Amended Successfully"
                      },
                      {
                        "accountReference": 1234567899,
                        "accountHostLocation": 81,
                        "accountSubTypeCode": 121,
                        "accountLifecycleStatus": 1,
                        "reasonCode": 1,
                        "reasonDescription": "Agreement Amended Successfully"
                      }
                    ],
                    "rowErrorText": null,
                    "rowErrorCategory": null,
                    "rowErrorNumber": null
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "502": {
            "description": "Bad Gateway",
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          },
          "503": {
            "description": "Service Unavailable",
            "headers": {
              "X-Journey-Id": {
                "type": "string",
                "minLength": 36,
                "maxLength": 36,
                "pattern": "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$",
                "description": "A unique identifier populated by the consumer. It follows the UUID pattern,  for example 123e4567-e89b-12d3-a456-426655440000\n"
              },
              "X-Create-Date-Time": {
                "type": "string",
                "format": "date-time",
                "description": "Time stamp associated with creation of the request message.  The UTC ISO 8601 Date Time format.  For example \"2017-01-01T00:00:00 or 2017-01-01T00:00:00.001Z\"\n"
              }
            },
            "schema": {
              "$ref": "#/definitions/Errors"
            }
          }
        }
      }
    }
  }
}