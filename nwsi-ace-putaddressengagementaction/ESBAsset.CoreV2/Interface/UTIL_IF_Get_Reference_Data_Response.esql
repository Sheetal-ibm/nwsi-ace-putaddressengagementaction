BROKER SCHEMA Interface

-- Enterprise Service Bus Implementation Accelerator Source Code

/* ==========================================================================
 *
 * Licensed Materials - Property of IBM
 *
 * Enterprise Service Bus Implementation Accelerator
 *
 * (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved
 *
 * US Government Users Restricted Rights - Use, duplication or
 * disclosure restricted by GSA ADP Schedule Contract with
 * IBM Corp.
 *
 * =========================================================================== */

--------------------------------------------------------------------------------------
-- Program History
-- Fix Number Module    Name                Date    	Description
-- 			  All		Rich Jones			29/06/05	Initial Version
-- AA00000093 All		Rich Jones			26/10/05	Corrected to match latest design doc
---------------------------------------------------------------------------------------
-- Description:
-- Convert the response data into the external message format
---------------------------------------------------------------------------------------

CREATE COMPUTE MODULE UTIL_IF_Get_Reference_Data_Response_Convert_From_Canonical
	Declare ClearCaseRevision CHAR('%Revision%');
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		
		Declare inRef Reference To InputLocalEnvironment; -- Used to point to incoming XML
		Declare outRef Reference To InputLocalEnvironment;
		Declare ic   Namespace 'http://www.ibm.com/esb/icommon';
		DECLARE can NAMESPACE 'http://Canonical.eai.ibm.com';
		DECLARE cs NAMESPACE 'http://common.eai.ibm.com';
		DECLARE esb NAMESPACE 'http://www.ibm.com/esb/imsg';
		CALL CopyMessageHeaders();
		
		
		-- Build output message and namespace declarations
		SET OutputRoot.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Version = '1.0';
		SET OutputRoot.XMLNSC.(XMLNSC.XmlDeclaration)*.(XMLNSC.Attribute)Encoding = 'UTF-8';
		Create LastChild Of OutputRoot.XMLNSC As outRef NAMESPACE esb Name 'esbMessage';
		SET OutputRoot.XMLNSC.esb:esbMessage.(XMLNSC.NamespaceDecl)xmlns:esb = esb;
		SET OutputRoot.XMLNSC.esb:esbMessage.(XMLNSC.NamespaceDecl)xmlns:cs = cs;
		--SET OutputRoot.XMLNSC.esb:esbMessage.(XMLNSC.NamespaceDecl)xmlns:leg = leg;
	
		--Map input message attributes to output message
		SET outRef.(XMLNSC.Attribute)LastMessage = 'true';
		SET outRef.(XMLNSC.Attribute)MessageType = 'Response';
		SET outRef.(XMLNSC.Attribute)BusinessTransId = InputRoot.XMLNSC.can:esbMessage.(XMLNSC.Attribute)BusinessTransId;
		SET outRef.(XMLNSC.Attribute)BusinessCorrelId = InputRoot.XMLNSC.can:esbMessage.(XMLNSC.Attribute)BusinessTransId;
		
	
		Create LastChild Of outRef As outRef NAMESPACE esb Name 'utilGetReferenceDataResp';
		
		Move inRef To InputRoot.XMLNSC.can:esbMessage.can:getReferenceDataOut;
		Set outRef.esb:RefData[] = inRef.can:referenceData[];
		Set outRef.esb:Response = inRef.can:response;
				

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

END MODULE;
